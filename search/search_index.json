{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PingFederate Provider The PingFederate provider is used to interact with the many resources supported by the PingFederate admin API. The provider needs to be configured with the proper credentials before it can be used. Use the navigation to the left to read about the available resources. Example Usage Terraform 0.13 and later: terraform { required_providers { pingfederate = { source = \"iwarapter/pingfederate\" version = \"~> 0.0.7\" } } } provider \"pingfederate\" { username = \"Administrator\" password = \"2Access\" base_url = \"https://localhost:9999\" context = \"/pf-admin-api/v1\" } # Create a authentication policy contract resource \"pingfederate_authentication_policy_contract\" \"demo\" { # ... } Terraform 0.12 and earlier: # Configure the PingFederate Provider provider \"pingfederate\" { username = \"Administrator\" password = \"2Access\" base_url = \"https://localhost:9999\" context = \"/pf-admin-api/v1\" } # Create a authentication policy contract resource \"pingfederate_authentication_policy_contract\" \"demo\" { # ... } Authentication The PingFederate provider offers a flexible means of providing credentials for authentication. The following methods are supported, in this order, and explained below: Static credentials Environment variables Static credentials Static credentials can be provided by adding an username and password in-line in the PingFederate provider block: Usage: provider \"pingfederate\" { username = \"Administrator\" password = \"2Access\" base_url = \"https://localhost:9999\" context = \"/pf-admin-api/v1\" } Environment variables You can provide your credentials via the PINGFEDERATE_USERNAME , PINGFEDERATE_PASSWORD , PINGFEDERATE_CONTEXT and PINGFEDERATE_BASEURL environment variables. provider \"pingfederate\" {} Usage: $ export PINGFEDERATE_USERNAME = \"Administrator\" $ export PINGFEDERATE_PASSWORD = \"top_secret\" $ export PINGFEDERATE_CONTEXT = \"/pf-admin-api/v1\" $ export PINGFEDERATE_BASEURL = \"https://myadmin.server:9999\" $ terraform plan Argument Reference In addition to generic provider arguments (e.g. alias and version ), the following arguments are supported in the AWS provider block: username - (Required) This is the PingFederate administrative username. It must be provided, but it can also be sourced from the PINGFEDERATE_USERNAME environment variable. password - (Required) This is the PingFederate administrative password. It must be provided, but it can also be sourced from the PINGFEDERATE_PASSWORD environment variable. base_url - (Required) This is the PingFederate base url (protocol:server:port). It must be provided, but it can also be sourced from the PINGFEDERATE_BASEURL environment variable. context - (Optional) This is the PingFederate context path for the admin API, defaults to /pf-admin-api/v1 and can be sourced from the PINGFEDERATE_CONTEXT environment variable. bypass_external_validation - (Optional) Whether to ignore external validation of resources within PingFederate defaults to false .","title":"PingFederate Provider"},{"location":"#pingfederate-provider","text":"The PingFederate provider is used to interact with the many resources supported by the PingFederate admin API. The provider needs to be configured with the proper credentials before it can be used. Use the navigation to the left to read about the available resources.","title":"PingFederate Provider"},{"location":"#example-usage","text":"Terraform 0.13 and later: terraform { required_providers { pingfederate = { source = \"iwarapter/pingfederate\" version = \"~> 0.0.7\" } } } provider \"pingfederate\" { username = \"Administrator\" password = \"2Access\" base_url = \"https://localhost:9999\" context = \"/pf-admin-api/v1\" } # Create a authentication policy contract resource \"pingfederate_authentication_policy_contract\" \"demo\" { # ... } Terraform 0.12 and earlier: # Configure the PingFederate Provider provider \"pingfederate\" { username = \"Administrator\" password = \"2Access\" base_url = \"https://localhost:9999\" context = \"/pf-admin-api/v1\" } # Create a authentication policy contract resource \"pingfederate_authentication_policy_contract\" \"demo\" { # ... }","title":"Example Usage"},{"location":"#authentication","text":"The PingFederate provider offers a flexible means of providing credentials for authentication. The following methods are supported, in this order, and explained below: Static credentials Environment variables","title":"Authentication"},{"location":"#static-credentials","text":"Static credentials can be provided by adding an username and password in-line in the PingFederate provider block: Usage: provider \"pingfederate\" { username = \"Administrator\" password = \"2Access\" base_url = \"https://localhost:9999\" context = \"/pf-admin-api/v1\" }","title":"Static credentials"},{"location":"#environment-variables","text":"You can provide your credentials via the PINGFEDERATE_USERNAME , PINGFEDERATE_PASSWORD , PINGFEDERATE_CONTEXT and PINGFEDERATE_BASEURL environment variables. provider \"pingfederate\" {} Usage: $ export PINGFEDERATE_USERNAME = \"Administrator\" $ export PINGFEDERATE_PASSWORD = \"top_secret\" $ export PINGFEDERATE_CONTEXT = \"/pf-admin-api/v1\" $ export PINGFEDERATE_BASEURL = \"https://myadmin.server:9999\" $ terraform plan","title":"Environment variables"},{"location":"#argument-reference","text":"In addition to generic provider arguments (e.g. alias and version ), the following arguments are supported in the AWS provider block: username - (Required) This is the PingFederate administrative username. It must be provided, but it can also be sourced from the PINGFEDERATE_USERNAME environment variable. password - (Required) This is the PingFederate administrative password. It must be provided, but it can also be sourced from the PINGFEDERATE_PASSWORD environment variable. base_url - (Required) This is the PingFederate base url (protocol:server:port). It must be provided, but it can also be sourced from the PINGFEDERATE_BASEURL environment variable. context - (Optional) This is the PingFederate context path for the admin API, defaults to /pf-admin-api/v1 and can be sourced from the PINGFEDERATE_CONTEXT environment variable. bypass_external_validation - (Optional) Whether to ignore external validation of resources within PingFederate defaults to false .","title":"Argument Reference"},{"location":"data-sources/pingfederate_keypair_signing_csr/","text":"Data Source: pingfederate_keypair_signing_csr Use this data source to get the CSR of a signing keypair in Ping Federate. Example Usage data \"pingfederate_keypair_signing_csr\" \"csr\" { id = pingfederate_keypair_signing.demo_generate.id } Argument Attributes The following arguments are supported: id - (required) The ID for the keypair. Attributes Reference In addition to all arguments above, the following attributes are exported: cert_request_pem - The keypairs's Certificate Signing Response.","title":"Data Source: pingfederate_keypair_signing_csr"},{"location":"data-sources/pingfederate_keypair_signing_csr/#data-source-pingfederate_keypair_signing_csr","text":"Use this data source to get the CSR of a signing keypair in Ping Federate.","title":"Data Source: pingfederate_keypair_signing_csr"},{"location":"data-sources/pingfederate_keypair_signing_csr/#example-usage","text":"data \"pingfederate_keypair_signing_csr\" \"csr\" { id = pingfederate_keypair_signing.demo_generate.id }","title":"Example Usage"},{"location":"data-sources/pingfederate_keypair_signing_csr/#argument-attributes","text":"The following arguments are supported: id - (required) The ID for the keypair.","title":"Argument Attributes"},{"location":"data-sources/pingfederate_keypair_signing_csr/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: cert_request_pem - The keypairs's Certificate Signing Response.","title":"Attributes Reference"},{"location":"data-sources/pingfederate_keypair_ssl_server_csr/","text":"Data Source: pingfederate_keypair_ssl_server_csr Use this data source to get the CSR of a ssl server keypair in Ping Federate. Example Usage data \"pingfederate_keypair_ssl_server_csr\" \"csr\" { id = pingfederate_keypair_ssl_server.demo_generate.id } Argument Attributes The following arguments are supported: id - (required) The ID for the keypair. Attributes Reference In addition to all arguments above, the following attributes are exported: cert_request_pem - The keypairs's Certificate Signing Response.","title":"Data Source: pingfederate_keypair_ssl_server_csr"},{"location":"data-sources/pingfederate_keypair_ssl_server_csr/#data-source-pingfederate_keypair_ssl_server_csr","text":"Use this data source to get the CSR of a ssl server keypair in Ping Federate.","title":"Data Source: pingfederate_keypair_ssl_server_csr"},{"location":"data-sources/pingfederate_keypair_ssl_server_csr/#example-usage","text":"data \"pingfederate_keypair_ssl_server_csr\" \"csr\" { id = pingfederate_keypair_ssl_server.demo_generate.id }","title":"Example Usage"},{"location":"data-sources/pingfederate_keypair_ssl_server_csr/#argument-attributes","text":"The following arguments are supported: id - (required) The ID for the keypair.","title":"Argument Attributes"},{"location":"data-sources/pingfederate_keypair_ssl_server_csr/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: cert_request_pem - The keypairs's Certificate Signing Response.","title":"Attributes Reference"},{"location":"releases/changelog/","text":"0.0.8 (Unreleased) NOTES: This is an early release experimental build for PingFederate 10.x The bypass_external_validation which several resources used has been migrated to provider level configuration. This is a breaking change as the attribute was removed from the following affected resources: resource_pingfederate_authentication_policies resource_pingfederate_idp_adapter resource_pingfederate_idp_sp_connection resource_pingfederate_jdbc_data_store resource_pingfederate_ldap_data_store resource_pingfederate_oauth_access_token_mappings resource_pingfederate_oauth_openid_connect_policy resource_pingfederate_sp_authentication_policy_contract_mapping resource_pingfederate_sp_idp_connection BUG FIXES: Fix issues with importing several resources. 0.0.7 (Nov 9th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x BUG FIXES: resource/pingfederate_authentication_selector: Fix handling of the attribute contract. 0.0.6 (Oct 15th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x BUG FIXES: resource/pingfederate_oauth_client: Was missing several configuration fields and didnt support NONE client auth types. Fixed issue with root boolean values not being set to false on several resources Changed descriptor validation logic to soft fail if the role isnt enabled (but could be as part of the apply). 0.0.5 (Sept 14th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: pingfederate_authentication_api_application New Resource: pingfederate_authentication_api_settings New Resource: pingfederate_idp_sp_connection New Resource: pingfederate_kerberos_realm New Resource: pingfederate_keypair_signing New Resource: pingfederate_sp_idp_connection 0.0.4 (Aug 24th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: resource_pingfederate_certificates_ca 0.0.3 (Aug 24th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: resource_pingfederate_notification_publisher 0.0.2 (Aug 6th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: pingfederate_authentication_policies_settings New Resource: pingfederate_authentication_policies New Resource: pingfederate_server_settings 0.0.1 (June 24th, 2020) NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: pingfederate_authentication_policy_contract New Resource: pingfederate_authentication_selector New Resource: pingfederate_jdbc_data_store New Resource: pingfederate_ldap_data_store New Resource: pingfederate_idp_adapter New Resource: pingfederate_oauth_auth_server_settings New Resource: pingfederate_oauth_authentication_policy_contract_mapping New Resource: pingfederate_oauth_client New Resource: pingfederate_oauth_access_token_manager New Resource: pingfederate_oauth_access_token_mappings New Resource: pingfederate_oauth_openid_connect_policy New Resource: pingfederate_sp_adapter New Resource: pingfederate_sp_authentication_policy_contract_mapping New Resource: pingfederate_password_credential_validator","title":"Changelog"},{"location":"releases/changelog/#008-unreleased","text":"NOTES: This is an early release experimental build for PingFederate 10.x The bypass_external_validation which several resources used has been migrated to provider level configuration. This is a breaking change as the attribute was removed from the following affected resources: resource_pingfederate_authentication_policies resource_pingfederate_idp_adapter resource_pingfederate_idp_sp_connection resource_pingfederate_jdbc_data_store resource_pingfederate_ldap_data_store resource_pingfederate_oauth_access_token_mappings resource_pingfederate_oauth_openid_connect_policy resource_pingfederate_sp_authentication_policy_contract_mapping resource_pingfederate_sp_idp_connection BUG FIXES: Fix issues with importing several resources.","title":"0.0.8 (Unreleased)"},{"location":"releases/changelog/#007-nov-9th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x BUG FIXES: resource/pingfederate_authentication_selector: Fix handling of the attribute contract.","title":"0.0.7 (Nov 9th, 2020)"},{"location":"releases/changelog/#006-oct-15th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x BUG FIXES: resource/pingfederate_oauth_client: Was missing several configuration fields and didnt support NONE client auth types. Fixed issue with root boolean values not being set to false on several resources Changed descriptor validation logic to soft fail if the role isnt enabled (but could be as part of the apply).","title":"0.0.6 (Oct 15th, 2020)"},{"location":"releases/changelog/#005-sept-14th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: pingfederate_authentication_api_application New Resource: pingfederate_authentication_api_settings New Resource: pingfederate_idp_sp_connection New Resource: pingfederate_kerberos_realm New Resource: pingfederate_keypair_signing New Resource: pingfederate_sp_idp_connection","title":"0.0.5 (Sept 14th, 2020)"},{"location":"releases/changelog/#004-aug-24th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: resource_pingfederate_certificates_ca","title":"0.0.4 (Aug 24th, 2020)"},{"location":"releases/changelog/#003-aug-24th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: resource_pingfederate_notification_publisher","title":"0.0.3 (Aug 24th, 2020)"},{"location":"releases/changelog/#002-aug-6th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: pingfederate_authentication_policies_settings New Resource: pingfederate_authentication_policies New Resource: pingfederate_server_settings","title":"0.0.2 (Aug 6th, 2020)"},{"location":"releases/changelog/#001-june-24th-2020","text":"NOTES: This is an early release experimental build for PingFederate 10.x FEATURES: New Resource: pingfederate_authentication_policy_contract New Resource: pingfederate_authentication_selector New Resource: pingfederate_jdbc_data_store New Resource: pingfederate_ldap_data_store New Resource: pingfederate_idp_adapter New Resource: pingfederate_oauth_auth_server_settings New Resource: pingfederate_oauth_authentication_policy_contract_mapping New Resource: pingfederate_oauth_client New Resource: pingfederate_oauth_access_token_manager New Resource: pingfederate_oauth_access_token_mappings New Resource: pingfederate_oauth_openid_connect_policy New Resource: pingfederate_sp_adapter New Resource: pingfederate_sp_authentication_policy_contract_mapping New Resource: pingfederate_password_credential_validator","title":"0.0.1 (June 24th, 2020)"},{"location":"resources/pingfederate_authentication_policies/","text":"Resource: pingfederate_authentication_policies Provides a Authentication Policies. -> This resource manages a singleton within PingFederate and as such you should ONLY ever declare one of this resource type. Deleting this resource simply clears all policies. Example Usage resource \"pingfederate_authentication_policies\" \"demo\" { fail_if_no_selection = false tracked_http_parameters = [\"foo\"] default_authentication_sources { type = \"IDP_ADAPTER\" source_ref { id = pingfederate_idp_adapter.demo.id } } authn_selection_trees { name = \"bar\" root_node { action { type = \"AUTHN_SOURCE\" authentication_source { type = \"IDP_ADAPTER\" source_ref { id = pingfederate_idp_adapter.demo.id } } } children { action { type = \"RESTART\" context = \"Fail\" } } children { action { type = \"DONE\" context = \"Success\" } } } } authn_selection_trees { name = \"foo\" root_node { action { type = \"AUTHN_SOURCE\" authentication_source { type = \"IDP_ADAPTER\" source_ref { id = pingfederate_idp_adapter.demo.id } } } children { action { type = \"RESTART\" context = \"Fail\" } } children { action { type = \"DONE\" context = \"Success\" } } } } } Argument Attributes The following arguments are supported: authn_selection_trees - (Optional) The list of authentication policy trees. default_authentication_sources - (Optional) The default authentication sources. fail_if_no_selection - (Optional) Fail if policy finds no authentication source. tracked_http_parameters - (Optional) The HTTP request parameters to track and make available to authentication sources, selectors, and contract mappings throughout the authentication policy. authn_selection_trees The authn_selection_trees block - An authentication policy tree. authentication_api_application_ref - (Optional) Authentication API Application Id to be used in this policy branch. If the value is not specified, no Authentication API Application will be used. description - (Optional) A description for the authentication policy. enabled - (Optional) Whether or not this authentication policy tree is enabled. Default is true. name - (Optional) The authentication policy name. Name is unique. root_node - (Optional) A node inside the authentication policy tree. root_node / children The root_node and children block - An authentication policy tree node. action - (Required) The result action. children - (Optional) The nodes inside the authentication policy tree node. action The action block - An authentication policy selection action. This can be configured for one of the following policy types. ApcMappingPolicyAction LocalIdentityMappingPolicyAction AuthnSelectorPolicyAction AuthnSourcePolicyAction ContinuePolicyAction RestartPolicyAction DonePolicyAction APC Mapping Policy Action The action block attribute_mapping - (Required) Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores. authentication_policy_contract_ref - (Required) Reference to the associated authentication policy contract. context - (Optional) The result context. type - (Required) The authentication selection type. LocalIdentityMappingPolicyAction The action block context - (Optional) The result context. inbound_mapping - (Optional) Inbound mappings into the local identity profile fields. local_identity_ref - (Required) Reference to the associated local identity profile. outbound_attribute_mapping - (Required) Authentication policy contract mappings associated with this local Identity profile. type - (Required) The authentication selection type. AuthnSelectorPolicyAction The action block authentication_selector_ref - (Required) Reference to the associated authentication selector. context - (Optional) The result context. type - (Required) The authentication selection type. AuthnSourcePolicyAction The action block attribute_rules - (Optional) The authentication policy rules. authentication_source - (Required) The associated authentication source. context - (Optional) The result context. input_user_id_mapping - (Optional) The input user id mapping. type - (Required) The authentication selection type. ContinuePolicyAction The action block context - (Optional) The result context. type - (Required) The authentication selection type. DonePolicyAction The action block context - (Optional) The result context. type - (Required) The authentication selection type. RestartPolicyAction The action block context - (Optional) The result context. type - (Required) The authentication selection type. attribute_contract_fulfillment The attribute_contract_fulfillment block - Defines how an attribute in an attribute contract should be populated. key_name - (Required) The attribute key mapping. source - (Required) The attribute value source. value - (Required) The value for this attribute. attribute_mapping The attribute_mapping block - A list of mappings from attribute sources to attribute targets. attribute_contract_fulfillment - (Required) A list of mappings from attribute names to their fulfillment values. ldap_attribute_source - (Optional) A list of configured ldap data stores to look up attributes from. jdbc_attribute_source - (Optional) A list of configured jdbc data stores to look up attributes from. custom_attribute_source - (Optional) A list of configured custom data stores to look up attributes from. issuance_criteria - (Optional) The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled. attribute_rule The attribute_rule block - Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy. attribute_name - (Required) The name of the attribute to use in this attribute rule. condition - (Required) The condition that will be applied to the attribute's expected value. expected_value - (Required) The expected value of this attribute rule. result - (Required) The result of this attribute rule. attribute_rules The attribute_rules block - A collection of attribute rules fallback_to_success - (Optional) When all the rules fail, you may choose to default to the general success action or fail. Default to success. items - (Optional) The actual list of attribute rules. authentication_source The authentication_source block - An authentication source (IdP adapter or IdP connection). source_ref - (Required) A reference to the authentication source. type - (Required) The type of this authentication source. conditional_criteria The conditional_criteria block - An issuance criterion that checks a source attribute against a particular condition and the expected value. If the condition is true then this issuance criterion passes, otherwise the criterion fails. attribute_name - (Required) The name of the attribute to use in this issuance criterion. condition - (Required) The condition that will be applied to the source attribute's value and the expected value. error_result - (Optional) The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs. source - (Required) The source of the attribute. value - (Required) The expected value of this issuance criterion. custom_attribute_source The custom_attribute_source block - The configured settings used to look up attributes from a custom data store. attribute_contract_fulfillment - (Optional) A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings data_store_ref - (Required) Reference to the associated data store. description - (Optional) The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping. Note: Required for APC-to-SP Adapter Mappings filter_fields - (Optional) The list of fields that can be used to filter a request to the custom data store. expression_criteria The expression_criteria block - An issuance criterion that uses a Boolean return value from an OGNL expression to determine whether or not it passes. error_result - (Optional) The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs. expression - (Required) The OGNL expression to evaluate. filter_fields The filter_fields block - A simple name value pair to represent a field entry. name - (Required) The name of this field. value - (Optional) The value of this field. Whether or not the value is required will be determined by plugin validation checks. issuance_criteria The issuance_criteria block - A list of criteria that determines whether a transaction (usually a SSO transaction) is continued. All criteria must pass in order for the transaction to continue. conditional_criteria - (Optional) A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue. expression_criteria - (Optional) A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. jdbc_attribute_source The jdbc_attribute_source block - The configured settings used to look up attributes from a JDBC data store. attribute_contract_fulfillment - (Optional) A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings data_store_ref - (Required) Reference to the associated data store. description - (Optional) The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping. Note: Required for APC-to-SP Adapter Mappings filter - (Required) The JDBC WHERE clause used to query your data store to locate a user record. schema - (Optional) Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema. table - (Required) The name of the database table. The name is used to construct the SQL query to retrieve data from the data store. ldap_attribute_source The ldap_attribute_source block - The configured settings used to look up attributes from a LDAP data store. attribute_contract_fulfillment - (Optional) A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings base_dn - (Optional) The base DN to search from. If not specified, the search will start at the LDAP's root. binary_attribute_settings - (Optional) The advanced settings for binary LDAP attributes. data_store_ref - (Required) Reference to the associated data store. description - (Optional) The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping. Note: Required for APC-to-SP Adapter Mappings member_of_nested_group - (Optional) Set this to true to return transitive group memberships for the 'memberOf' attribute. This only applies for Active Directory data sources. All other data sources will be set to false. search_filter - (Required) The LDAP filter that will be used to lookup the objects from the directory. search_scope - (Required) Determines the node depth of the query. source The source block - A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values. type - (Required) The source type of this key. For each SourceType, the value should be: ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration. ADAPTER - The value is one of the attributes of the IdP Adapter. ASSERTION - The value is one of the attributes coming from the SAML assertion. AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract. LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile. CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'] CLAIMS - Attributes provided by the OIDC Provider. CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store. EXPRESSION - The value is an OGNL expression. EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES. EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property. IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection. JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source. LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store. MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping. OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant. PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV. NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute. TOKEN - The value is one of the token attributes. REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust. TRACKED_HTTP_PARAMS - The value is from the original request parameters. SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes. ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes. TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.","title":"Resource: pingfederate_authentication_policies"},{"location":"resources/pingfederate_authentication_policies/#resource-pingfederate_authentication_policies","text":"Provides a Authentication Policies. -> This resource manages a singleton within PingFederate and as such you should ONLY ever declare one of this resource type. Deleting this resource simply clears all policies.","title":"Resource: pingfederate_authentication_policies"},{"location":"resources/pingfederate_authentication_policies/#example-usage","text":"resource \"pingfederate_authentication_policies\" \"demo\" { fail_if_no_selection = false tracked_http_parameters = [\"foo\"] default_authentication_sources { type = \"IDP_ADAPTER\" source_ref { id = pingfederate_idp_adapter.demo.id } } authn_selection_trees { name = \"bar\" root_node { action { type = \"AUTHN_SOURCE\" authentication_source { type = \"IDP_ADAPTER\" source_ref { id = pingfederate_idp_adapter.demo.id } } } children { action { type = \"RESTART\" context = \"Fail\" } } children { action { type = \"DONE\" context = \"Success\" } } } } authn_selection_trees { name = \"foo\" root_node { action { type = \"AUTHN_SOURCE\" authentication_source { type = \"IDP_ADAPTER\" source_ref { id = pingfederate_idp_adapter.demo.id } } } children { action { type = \"RESTART\" context = \"Fail\" } } children { action { type = \"DONE\" context = \"Success\" } } } } }","title":"Example Usage"},{"location":"resources/pingfederate_authentication_policies/#argument-attributes","text":"The following arguments are supported: authn_selection_trees - (Optional) The list of authentication policy trees. default_authentication_sources - (Optional) The default authentication sources. fail_if_no_selection - (Optional) Fail if policy finds no authentication source. tracked_http_parameters - (Optional) The HTTP request parameters to track and make available to authentication sources, selectors, and contract mappings throughout the authentication policy.","title":"Argument Attributes"},{"location":"resources/pingfederate_authentication_policies/#authn_selection_trees","text":"The authn_selection_trees block - An authentication policy tree. authentication_api_application_ref - (Optional) Authentication API Application Id to be used in this policy branch. If the value is not specified, no Authentication API Application will be used. description - (Optional) A description for the authentication policy. enabled - (Optional) Whether or not this authentication policy tree is enabled. Default is true. name - (Optional) The authentication policy name. Name is unique. root_node - (Optional) A node inside the authentication policy tree.","title":"authn_selection_trees"},{"location":"resources/pingfederate_authentication_policies/#root_node-children","text":"The root_node and children block - An authentication policy tree node. action - (Required) The result action. children - (Optional) The nodes inside the authentication policy tree node.","title":"root_node / children"},{"location":"resources/pingfederate_authentication_policies/#action","text":"The action block - An authentication policy selection action. This can be configured for one of the following policy types. ApcMappingPolicyAction LocalIdentityMappingPolicyAction AuthnSelectorPolicyAction AuthnSourcePolicyAction ContinuePolicyAction RestartPolicyAction DonePolicyAction","title":"action"},{"location":"resources/pingfederate_authentication_policies/#apc-mapping-policy-action","text":"The action block attribute_mapping - (Required) Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores. authentication_policy_contract_ref - (Required) Reference to the associated authentication policy contract. context - (Optional) The result context. type - (Required) The authentication selection type.","title":"APC Mapping Policy Action"},{"location":"resources/pingfederate_authentication_policies/#localidentitymappingpolicyaction","text":"The action block context - (Optional) The result context. inbound_mapping - (Optional) Inbound mappings into the local identity profile fields. local_identity_ref - (Required) Reference to the associated local identity profile. outbound_attribute_mapping - (Required) Authentication policy contract mappings associated with this local Identity profile. type - (Required) The authentication selection type.","title":"LocalIdentityMappingPolicyAction"},{"location":"resources/pingfederate_authentication_policies/#authnselectorpolicyaction","text":"The action block authentication_selector_ref - (Required) Reference to the associated authentication selector. context - (Optional) The result context. type - (Required) The authentication selection type.","title":"AuthnSelectorPolicyAction"},{"location":"resources/pingfederate_authentication_policies/#authnsourcepolicyaction","text":"The action block attribute_rules - (Optional) The authentication policy rules. authentication_source - (Required) The associated authentication source. context - (Optional) The result context. input_user_id_mapping - (Optional) The input user id mapping. type - (Required) The authentication selection type.","title":"AuthnSourcePolicyAction"},{"location":"resources/pingfederate_authentication_policies/#continuepolicyaction","text":"The action block context - (Optional) The result context. type - (Required) The authentication selection type.","title":"ContinuePolicyAction"},{"location":"resources/pingfederate_authentication_policies/#donepolicyaction","text":"The action block context - (Optional) The result context. type - (Required) The authentication selection type.","title":"DonePolicyAction"},{"location":"resources/pingfederate_authentication_policies/#restartpolicyaction","text":"The action block context - (Optional) The result context. type - (Required) The authentication selection type.","title":"RestartPolicyAction"},{"location":"resources/pingfederate_authentication_policies/#attribute_contract_fulfillment","text":"The attribute_contract_fulfillment block - Defines how an attribute in an attribute contract should be populated. key_name - (Required) The attribute key mapping. source - (Required) The attribute value source. value - (Required) The value for this attribute.","title":"attribute_contract_fulfillment"},{"location":"resources/pingfederate_authentication_policies/#attribute_mapping","text":"The attribute_mapping block - A list of mappings from attribute sources to attribute targets. attribute_contract_fulfillment - (Required) A list of mappings from attribute names to their fulfillment values. ldap_attribute_source - (Optional) A list of configured ldap data stores to look up attributes from. jdbc_attribute_source - (Optional) A list of configured jdbc data stores to look up attributes from. custom_attribute_source - (Optional) A list of configured custom data stores to look up attributes from. issuance_criteria - (Optional) The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.","title":"attribute_mapping"},{"location":"resources/pingfederate_authentication_policies/#attribute_rule","text":"The attribute_rule block - Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy. attribute_name - (Required) The name of the attribute to use in this attribute rule. condition - (Required) The condition that will be applied to the attribute's expected value. expected_value - (Required) The expected value of this attribute rule. result - (Required) The result of this attribute rule.","title":"attribute_rule"},{"location":"resources/pingfederate_authentication_policies/#attribute_rules","text":"The attribute_rules block - A collection of attribute rules fallback_to_success - (Optional) When all the rules fail, you may choose to default to the general success action or fail. Default to success. items - (Optional) The actual list of attribute rules.","title":"attribute_rules"},{"location":"resources/pingfederate_authentication_policies/#authentication_source","text":"The authentication_source block - An authentication source (IdP adapter or IdP connection). source_ref - (Required) A reference to the authentication source. type - (Required) The type of this authentication source.","title":"authentication_source"},{"location":"resources/pingfederate_authentication_policies/#conditional_criteria","text":"The conditional_criteria block - An issuance criterion that checks a source attribute against a particular condition and the expected value. If the condition is true then this issuance criterion passes, otherwise the criterion fails. attribute_name - (Required) The name of the attribute to use in this issuance criterion. condition - (Required) The condition that will be applied to the source attribute's value and the expected value. error_result - (Optional) The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs. source - (Required) The source of the attribute. value - (Required) The expected value of this issuance criterion.","title":"conditional_criteria"},{"location":"resources/pingfederate_authentication_policies/#custom_attribute_source","text":"The custom_attribute_source block - The configured settings used to look up attributes from a custom data store. attribute_contract_fulfillment - (Optional) A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings data_store_ref - (Required) Reference to the associated data store. description - (Optional) The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping. Note: Required for APC-to-SP Adapter Mappings filter_fields - (Optional) The list of fields that can be used to filter a request to the custom data store.","title":"custom_attribute_source"},{"location":"resources/pingfederate_authentication_policies/#expression_criteria","text":"The expression_criteria block - An issuance criterion that uses a Boolean return value from an OGNL expression to determine whether or not it passes. error_result - (Optional) The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs. expression - (Required) The OGNL expression to evaluate.","title":"expression_criteria"},{"location":"resources/pingfederate_authentication_policies/#filter_fields","text":"The filter_fields block - A simple name value pair to represent a field entry. name - (Required) The name of this field. value - (Optional) The value of this field. Whether or not the value is required will be determined by plugin validation checks.","title":"filter_fields"},{"location":"resources/pingfederate_authentication_policies/#issuance_criteria","text":"The issuance_criteria block - A list of criteria that determines whether a transaction (usually a SSO transaction) is continued. All criteria must pass in order for the transaction to continue. conditional_criteria - (Optional) A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue. expression_criteria - (Optional) A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.","title":"issuance_criteria"},{"location":"resources/pingfederate_authentication_policies/#jdbc_attribute_source","text":"The jdbc_attribute_source block - The configured settings used to look up attributes from a JDBC data store. attribute_contract_fulfillment - (Optional) A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings data_store_ref - (Required) Reference to the associated data store. description - (Optional) The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping. Note: Required for APC-to-SP Adapter Mappings filter - (Required) The JDBC WHERE clause used to query your data store to locate a user record. schema - (Optional) Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema. table - (Required) The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.","title":"jdbc_attribute_source"},{"location":"resources/pingfederate_authentication_policies/#ldap_attribute_source","text":"The ldap_attribute_source block - The configured settings used to look up attributes from a LDAP data store. attribute_contract_fulfillment - (Optional) A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings base_dn - (Optional) The base DN to search from. If not specified, the search will start at the LDAP's root. binary_attribute_settings - (Optional) The advanced settings for binary LDAP attributes. data_store_ref - (Required) Reference to the associated data store. description - (Optional) The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping. Note: Required for APC-to-SP Adapter Mappings member_of_nested_group - (Optional) Set this to true to return transitive group memberships for the 'memberOf' attribute. This only applies for Active Directory data sources. All other data sources will be set to false. search_filter - (Required) The LDAP filter that will be used to lookup the objects from the directory. search_scope - (Required) Determines the node depth of the query.","title":"ldap_attribute_source"},{"location":"resources/pingfederate_authentication_policies/#source","text":"The source block - A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values. type - (Required) The source type of this key. For each SourceType, the value should be: ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration. ADAPTER - The value is one of the attributes of the IdP Adapter. ASSERTION - The value is one of the attributes coming from the SAML assertion. AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract. LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile. CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'] CLAIMS - Attributes provided by the OIDC Provider. CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store. EXPRESSION - The value is an OGNL expression. EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES. EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property. IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection. JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source. LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store. MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping. OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant. PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV. NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute. TOKEN - The value is one of the token attributes. REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust. TRACKED_HTTP_PARAMS - The value is from the original request parameters. SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes. ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes. TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.","title":"source"},{"location":"resources/pingfederate_authentication_policy_contract/","text":"Resource: pingfederate_authentication_policy_contract Provides a authentication policy contract. Example Usage resource \"pingfederate_authentication_policy_contract\" \"demo\" { name = \"demo\" extended_attributes = [ \"foo\", \"bar\" ] } Argument Attributes The following arguments are supported: name - (Required) The Authentication Policy Contract Name. Name is unique. extended_attributes - A list of additional attributes as needed. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The access token validator's ID. core_attributes - A list of read-only assertion attributes (for example, subject) that are automatically populated by PingFederate. Import Authentication Policy Contracts can be imported using the id, e.g. terraform import pingfederate_authentication_policy_contract.demo 123","title":"pingfederate_authentication_policy_contract"},{"location":"resources/pingfederate_authentication_policy_contract/#resource-pingfederate_authentication_policy_contract","text":"Provides a authentication policy contract.","title":"Resource: pingfederate_authentication_policy_contract"},{"location":"resources/pingfederate_authentication_policy_contract/#example-usage","text":"resource \"pingfederate_authentication_policy_contract\" \"demo\" { name = \"demo\" extended_attributes = [ \"foo\", \"bar\" ] }","title":"Example Usage"},{"location":"resources/pingfederate_authentication_policy_contract/#argument-attributes","text":"The following arguments are supported: name - (Required) The Authentication Policy Contract Name. Name is unique. extended_attributes - A list of additional attributes as needed.","title":"Argument Attributes"},{"location":"resources/pingfederate_authentication_policy_contract/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The access token validator's ID. core_attributes - A list of read-only assertion attributes (for example, subject) that are automatically populated by PingFederate.","title":"Attributes Reference"},{"location":"resources/pingfederate_authentication_policy_contract/#import","text":"Authentication Policy Contracts can be imported using the id, e.g. terraform import pingfederate_authentication_policy_contract.demo 123","title":"Import"},{"location":"resources/pingfederate_certificate_ca/","text":"Resource: pingfederate_certificates_ca Provides a certificate ca. Example Usage resource \"pingfederate_certificates_ca\" \"demo\" { certificate_id = \"example\" file_data = base 64 encode ( file ( \"test_cases/amazon_root_ca1.pem\" )) } Argument Attributes The following arguments are supported: certificate_id - The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified. file_data - (Required) The certificate data in PEM format. New line characters should be omitted or encoded in this value. crypto_provider - ['LOCAL' or 'HSM']: Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The ID of the certificate ( certificate_id ). serial_number - The serial number assigned by the CA. subject_dn - The subject's distinguished name. subject_alternative_names - The subject alternative names (SAN). issuer_dn - The issuer's distinguished name. valid_from - The start date from which the item is valid, in ISO 8601 format (UTC). expires - The end date up until which the item is valid, in ISO 8601 format (UTC). key_algorithm - The public key algorithm. key_size - The public key size. signature_algorithm - The signature algorithm. version - The X.509 version to which the item conforms. sha1_fingerprint - SHA-1 fingerprint in Hex encoding. sha256_fingerprint - SHA-256 fingerprint in Hex encoding. status - ['VALID' or 'EXPIRED' or 'NOT_YET_VALID' or 'REVOKED']: Status of the item. Import Certificate CA can be imported using the id, e.g. terraform import pingfederate_certificates_ca.demo 123","title":"pingfederate_certificates_ca"},{"location":"resources/pingfederate_certificate_ca/#resource-pingfederate_certificates_ca","text":"Provides a certificate ca.","title":"Resource: pingfederate_certificates_ca"},{"location":"resources/pingfederate_certificate_ca/#example-usage","text":"resource \"pingfederate_certificates_ca\" \"demo\" { certificate_id = \"example\" file_data = base 64 encode ( file ( \"test_cases/amazon_root_ca1.pem\" )) }","title":"Example Usage"},{"location":"resources/pingfederate_certificate_ca/#argument-attributes","text":"The following arguments are supported: certificate_id - The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified. file_data - (Required) The certificate data in PEM format. New line characters should be omitted or encoded in this value. crypto_provider - ['LOCAL' or 'HSM']: Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.","title":"Argument Attributes"},{"location":"resources/pingfederate_certificate_ca/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The ID of the certificate ( certificate_id ). serial_number - The serial number assigned by the CA. subject_dn - The subject's distinguished name. subject_alternative_names - The subject alternative names (SAN). issuer_dn - The issuer's distinguished name. valid_from - The start date from which the item is valid, in ISO 8601 format (UTC). expires - The end date up until which the item is valid, in ISO 8601 format (UTC). key_algorithm - The public key algorithm. key_size - The public key size. signature_algorithm - The signature algorithm. version - The X.509 version to which the item conforms. sha1_fingerprint - SHA-1 fingerprint in Hex encoding. sha256_fingerprint - SHA-256 fingerprint in Hex encoding. status - ['VALID' or 'EXPIRED' or 'NOT_YET_VALID' or 'REVOKED']: Status of the item.","title":"Attributes Reference"},{"location":"resources/pingfederate_certificate_ca/#import","text":"Certificate CA can be imported using the id, e.g. terraform import pingfederate_certificates_ca.demo 123","title":"Import"},{"location":"resources/pingfederate_idp_sp_connections/","text":"Resource: pingfederate_idp_sp_connection Provides a idp sp connection. Example Usage resource \"pingfederate_idp_sp_connection\" \"demo\" { name = \"foo\" entity_id = \"foo\" active = true logging_mode = \"STANDARD\" credentials { inbound_back_channel_auth { type = \"INBOUND\" digital_signature = false require_ssl = false verification_subject_dn = \"CN = Example\" } } attribute_query { jdbc_attribute_source { filter = \"*\" description = \"foo\" schema = \"INFORMATION_SCHEMA\" table = \"ADMINISTRABLE_ROLE_AUTHORIZATIONS\" id = \"foo\" data_store_ref { id = \"ProvisionerDS\" } } attribute_contract_fulfillment { key_name = \"foo\" source { type = \"JDBC_DATA_STORE\" id = \"foo\" } value = \"GRANTEE\" } attributes = [ \"foo\" ] policy { sign_response = false sign_assertion = false encrypt_assertion = false require_signed_attribute_query = false require_encrypted_name_id = false } } } Argument Attributes The following arguments are supported: bypass_external_validation - (Optional) External validation will be bypassed when set to true. Default to false. connection_id - (Optional) The persistent, unique ID for the connection. It can be any combination of [a-zA-Z0-9._-]. This property is system-assigned if not specified. active - (Optional) Specifies whether the connection is active and ready to process incoming requests. The default value is false. additional_allowed_entities_configuration - (Optional) Additional allowed entities or issuers configuration. Currently only used in OIDC IdP (RP) connection. application_icon_url - (Optional) The application icon url. application_name - (Optional) The application name. attribute_query - (Optional) The attribute query settings for supporting SPs in requesting user attributes. base_url - (Optional) The fully-qualified hostname and port on which your partner's federation deployment runs. contact_info - (Optional) The contact information for this partner. credentials - (Optional) The certificates and settings for encryption, signing, and signature verification. It is required for SAMLx.x and WS-Fed Connections. default_virtual_entity_id - (Optional) The default alternate entity ID that identifies the local server to this partner. It is required when virtualEntityIds is not empty and must be included in that list. entity_id - (Required) The partner's entity ID (connection ID) or issuer value (for OIDC Connections). extended_properties - (Optional) Extended Properties allows to store additional information for IdP/SP Connections. The names of these extended properties should be defined in /extendedProperties. license_connection_group - (Optional) The license connection group. If your PingFederate license is based on connection groups, each connection must be assigned to a group before it can be used. logging_mode - (Optional) The level of transaction logging applicable for this connection. Default is STANDARD. metadata_reload_settings - (Optional) Connection metadata automatic reload settings. name - (Required) The connection name. outbound_provision - (Optional) The Outbound Provision settings. sp_browser_sso - (Optional) The browser-based SSO settings used to communicate with your SP. type - (Required) The type of this connection. This must be set to 'SP'. virtual_entity_ids - (Optional) List of alternate entity IDs that identifies the local server to this partner. ws_trust - (Optional) The Ws-Trust settings. AdditionalAllowedEntitiesConfiguration The additional_allowed_entities_configuration block - Additional allowed entities or issuers configuration. Currently only used in OIDC IdP (RP) connection. additional_allowed_entities - (Optional) An array of additional allowed entities or issuers to be accepted during entity or issuer validation. allow_additional_entities - (Optional) Set to true to configure additional entities or issuers to be accepted during entity or issuer validation. allow_all_entities - (Optional) Set to true to accept any entity or issuer during entity or issuer validation. (Not Recommended) SpAttributeQuery The sp_attribute_query block - The attribute query profile supports SPs in requesting user attributes. attribute_contract_fulfillment - (Required) A list of mappings from attribute names to their fulfillment values. attribute_sources - (Required) A list of configured data stores to look up attributes from. attributes - (Required) The list of attributes that may be returned to the SP in the response to an attribute request. issuance_criteria - (Optional) The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled. policy - (Optional) The attribute query profile's security policy. ContactInfo The contact_info block - Contact information. company - (Optional) Company name. email - (Optional) Contact email address. first_name - (Optional) Contact first name. last_name - (Optional) Contact last name. phone - (Optional) Contact phone number. ConnectionCredentials The connection_credentials block - The certificates and settings for encryption, signing, and signature verification. block_encryption_algorithm - (Optional) The algorithm used to encrypt assertions sent to this partner. AES_128, AES_256 and Triple_DES are also supported. Default is AES_128 certs - (Optional) The certificates used for signature verification and XML encryption. decryption_key_pair_ref - (Optional) The ID of the primary key pair used to decrypt message content received from this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate Administrative Console. inbound_back_channel_auth - (Optional) The SOAP authentication method(s) to use when you receive a message using SOAP back channel. key_transport_algorithm - (Optional) The algorithm used to transport keys to this partner. RSA_OAEP and RSA_v15 are supported. Default is RSA_OAEP outbound_back_channel_auth - (Optional) The SOAP authentication method(s) to use when you send a message using SOAP back channel. secondary_decryption_key_pair_ref - (Optional) The ID of the secondary key pair used to decrypt message content received from this partner. signing_settings - (Optional) Settings related to the manner in which messages sent to the partner are digitally signed. Required for SP Connections. verification_issuer_dn - (Optional) If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field. verification_subject_dn - (Optional) If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array. ConnectionMetadataUrl The connection_metadata_url block - Configuration settings to enable automatic reload of partner's metadata. enable_auto_metadata_update - (Optional) Specifies whether the metadata of the connection will be automatically reloaded. The default value is true. metadata_url_ref - (Required) ID of the saved Metadata URL. OutboundProvision The outbound_provision block - Outbound Provisioning allows an IdP to create and maintain user accounts at standards-based partner sites using SCIM as well as select-proprietary provisioning partner sites that are protocol-enabled. channels - (Required) Includes settings of a source data store, managing provisioning threads and mapping of attributes. custom_schema - (Optional) Custom SCIM attribute configuration. target_settings - (Required) Configuration fields that includes credentials to target SaaS application. type - (Required) The SaaS plugin type. SpBrowserSso The sp_browser_sso block - The SAML settings used to enable secure browser-based SSO to resources at your partner's site. adapter_mappings - (Required) A list of adapters that map to outgoing assertions. artifact - (Optional) The settings for an artifact binding. assertion_lifetime - (Required) The timeframe of validity before and after the issuance of the assertion. attribute_contract - (Required) A set of user attributes that the IdP sends in the SAML assertion. authentication_policy_contract_assertion_mappings - (Optional) A list of authentication policy contracts that map to outgoing assertions. default_target_url - (Optional) Default Target URL for SAML1.x connections. For SP connections, this default URL represents the destination on the SP where the user will be directed. For IdP connections, entering a URL in the Default Target URL field overrides the SP Default URL SSO setting. enabled_profiles - (Optional) The profiles that are enabled for browser-based SSO. SAML 2.0 supports all profiles whereas SAML 1.x IdP connections support both IdP and SP (non-standard) initiated SSO. This is required for SAMLx.x Connections. encryption_policy - (Required) The SAML 2.0 encryption policy for browser-based SSO. Required for SAML 2.0 connections. incoming_bindings - (Optional) The SAML bindings that are enabled for browser-based SSO. This is required for SAML 2.0 connections. For SAML 1.x based connections, it is not used for SP Connections and it is optional for IdP Connections. message_customizations - (Optional) The message customizations for browser-based SSO. Depending on server settings, connection type, and protocol this may or may not be supported. protocol - (Required) The browser-based SSO protocol to use. require_signed_authn_requests - (Optional) Require AuthN requests to be signed when received via the POST or Redirect bindings. sign_assertions - (Optional) Always sign the SAML Assertion. sign_response_as_required - (Optional) Sign SAML Response as required by the associated binding and encryption policy. Applicable to SAML2.0 only and is defaulted to true. It can be set to false only on SAML2.0 connections when signAssertions is set to true. slo_service_endpoints - (Optional) A list of possible endpoints to send SLO requests and responses. sp_saml_identity_mapping - (Optional) Process in which users authenticated by the IdP are associated with user accounts local to the SP. sp_ws_fed_identity_mapping - (Optional) Process in which users authenticated by the IdP are associated with user accounts local to the SP for WS-Federation connection types. sso_service_endpoints - (Required) A list of possible endpoints to send assertions to. url_whitelist_entries - (Optional) For WS-Federation connections, a whitelist of additional allowed domains and paths used to validate wreply for SLO, if enabled. ws_fed_token_type - (Optional) The WS-Federation Token Type to use. ws_trust_version - (Optional) The WS-Trust version for a WS-Federation connection. The default version is WSTRUST12. SpWsTrust The sp_ws_trust block - Ws-Trust STS provides security-token validation and creation to extend SSO access to identity-enabled Web Services abort_if_not_fulfilled_from_request - (Optional) If the attribute contract cannot be fulfilled using data from the Request, abort the transaction. attribute_contract - (Required) A set of user attributes that the IdP sends in the token. default_token_type - (Optional) The default token type when a web service client (WSC) does not specify in the token request which token type the STS should issue. Defaults to SAML 2.0. encrypt_saml2_assertion - (Optional) When selected, the STS encrypts the SAML 2.0 assertion. Applicable only to SAML 2.0 security token. This option does not apply to OAuth assertion profiles. generate_key - (Optional) When selected, the STS generates a symmetric key to be used in conjunction with the \"Holder of Key\" (HoK) designation for the assertion's Subject Confirmation Method. This option does not apply to OAuth assertion profiles. message_customizations - (Optional) The message customizations for WS-Trust. Depending on server settings, connection type, and protocol this may or may not be supported. minutes_after - (Optional) The amount of time after the SAML token was issued during which it is to be considered valid. The default value is 30. minutes_before - (Optional) The amount of time before the SAML token was issued during which it is to be considered valid. The default value is 5. o_auth_assertion_profiles - (Optional) When selected, four additional token-type requests become available. partner_service_ids - (Required) The partner service identifiers. request_contract_ref - (Optional) Request Contract to be used to map attribute values into the security token. token_processor_mappings - (Required) A list of token processors to validate incoming tokens. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The idp sp connections ID ( connection_id ) Import IDP SP Connections can be imported using the id, e.g. terraform import pingfederate_idp_sp_connection.demo 123","title":"Resource: pingfederate_idp_sp_connection"},{"location":"resources/pingfederate_idp_sp_connections/#resource-pingfederate_idp_sp_connection","text":"Provides a idp sp connection.","title":"Resource: pingfederate_idp_sp_connection"},{"location":"resources/pingfederate_idp_sp_connections/#example-usage","text":"resource \"pingfederate_idp_sp_connection\" \"demo\" { name = \"foo\" entity_id = \"foo\" active = true logging_mode = \"STANDARD\" credentials { inbound_back_channel_auth { type = \"INBOUND\" digital_signature = false require_ssl = false verification_subject_dn = \"CN = Example\" } } attribute_query { jdbc_attribute_source { filter = \"*\" description = \"foo\" schema = \"INFORMATION_SCHEMA\" table = \"ADMINISTRABLE_ROLE_AUTHORIZATIONS\" id = \"foo\" data_store_ref { id = \"ProvisionerDS\" } } attribute_contract_fulfillment { key_name = \"foo\" source { type = \"JDBC_DATA_STORE\" id = \"foo\" } value = \"GRANTEE\" } attributes = [ \"foo\" ] policy { sign_response = false sign_assertion = false encrypt_assertion = false require_signed_attribute_query = false require_encrypted_name_id = false } } }","title":"Example Usage"},{"location":"resources/pingfederate_idp_sp_connections/#argument-attributes","text":"The following arguments are supported: bypass_external_validation - (Optional) External validation will be bypassed when set to true. Default to false. connection_id - (Optional) The persistent, unique ID for the connection. It can be any combination of [a-zA-Z0-9._-]. This property is system-assigned if not specified. active - (Optional) Specifies whether the connection is active and ready to process incoming requests. The default value is false. additional_allowed_entities_configuration - (Optional) Additional allowed entities or issuers configuration. Currently only used in OIDC IdP (RP) connection. application_icon_url - (Optional) The application icon url. application_name - (Optional) The application name. attribute_query - (Optional) The attribute query settings for supporting SPs in requesting user attributes. base_url - (Optional) The fully-qualified hostname and port on which your partner's federation deployment runs. contact_info - (Optional) The contact information for this partner. credentials - (Optional) The certificates and settings for encryption, signing, and signature verification. It is required for SAMLx.x and WS-Fed Connections. default_virtual_entity_id - (Optional) The default alternate entity ID that identifies the local server to this partner. It is required when virtualEntityIds is not empty and must be included in that list. entity_id - (Required) The partner's entity ID (connection ID) or issuer value (for OIDC Connections). extended_properties - (Optional) Extended Properties allows to store additional information for IdP/SP Connections. The names of these extended properties should be defined in /extendedProperties. license_connection_group - (Optional) The license connection group. If your PingFederate license is based on connection groups, each connection must be assigned to a group before it can be used. logging_mode - (Optional) The level of transaction logging applicable for this connection. Default is STANDARD. metadata_reload_settings - (Optional) Connection metadata automatic reload settings. name - (Required) The connection name. outbound_provision - (Optional) The Outbound Provision settings. sp_browser_sso - (Optional) The browser-based SSO settings used to communicate with your SP. type - (Required) The type of this connection. This must be set to 'SP'. virtual_entity_ids - (Optional) List of alternate entity IDs that identifies the local server to this partner. ws_trust - (Optional) The Ws-Trust settings.","title":"Argument Attributes"},{"location":"resources/pingfederate_idp_sp_connections/#additionalallowedentitiesconfiguration","text":"The additional_allowed_entities_configuration block - Additional allowed entities or issuers configuration. Currently only used in OIDC IdP (RP) connection. additional_allowed_entities - (Optional) An array of additional allowed entities or issuers to be accepted during entity or issuer validation. allow_additional_entities - (Optional) Set to true to configure additional entities or issuers to be accepted during entity or issuer validation. allow_all_entities - (Optional) Set to true to accept any entity or issuer during entity or issuer validation. (Not Recommended)","title":"AdditionalAllowedEntitiesConfiguration"},{"location":"resources/pingfederate_idp_sp_connections/#spattributequery","text":"The sp_attribute_query block - The attribute query profile supports SPs in requesting user attributes. attribute_contract_fulfillment - (Required) A list of mappings from attribute names to their fulfillment values. attribute_sources - (Required) A list of configured data stores to look up attributes from. attributes - (Required) The list of attributes that may be returned to the SP in the response to an attribute request. issuance_criteria - (Optional) The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled. policy - (Optional) The attribute query profile's security policy.","title":"SpAttributeQuery"},{"location":"resources/pingfederate_idp_sp_connections/#contactinfo","text":"The contact_info block - Contact information. company - (Optional) Company name. email - (Optional) Contact email address. first_name - (Optional) Contact first name. last_name - (Optional) Contact last name. phone - (Optional) Contact phone number.","title":"ContactInfo"},{"location":"resources/pingfederate_idp_sp_connections/#connectioncredentials","text":"The connection_credentials block - The certificates and settings for encryption, signing, and signature verification. block_encryption_algorithm - (Optional) The algorithm used to encrypt assertions sent to this partner. AES_128, AES_256 and Triple_DES are also supported. Default is AES_128 certs - (Optional) The certificates used for signature verification and XML encryption. decryption_key_pair_ref - (Optional) The ID of the primary key pair used to decrypt message content received from this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate Administrative Console. inbound_back_channel_auth - (Optional) The SOAP authentication method(s) to use when you receive a message using SOAP back channel. key_transport_algorithm - (Optional) The algorithm used to transport keys to this partner. RSA_OAEP and RSA_v15 are supported. Default is RSA_OAEP outbound_back_channel_auth - (Optional) The SOAP authentication method(s) to use when you send a message using SOAP back channel. secondary_decryption_key_pair_ref - (Optional) The ID of the secondary key pair used to decrypt message content received from this partner. signing_settings - (Optional) Settings related to the manner in which messages sent to the partner are digitally signed. Required for SP Connections. verification_issuer_dn - (Optional) If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field. verification_subject_dn - (Optional) If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.","title":"ConnectionCredentials"},{"location":"resources/pingfederate_idp_sp_connections/#connectionmetadataurl","text":"The connection_metadata_url block - Configuration settings to enable automatic reload of partner's metadata. enable_auto_metadata_update - (Optional) Specifies whether the metadata of the connection will be automatically reloaded. The default value is true. metadata_url_ref - (Required) ID of the saved Metadata URL.","title":"ConnectionMetadataUrl"},{"location":"resources/pingfederate_idp_sp_connections/#outboundprovision","text":"The outbound_provision block - Outbound Provisioning allows an IdP to create and maintain user accounts at standards-based partner sites using SCIM as well as select-proprietary provisioning partner sites that are protocol-enabled. channels - (Required) Includes settings of a source data store, managing provisioning threads and mapping of attributes. custom_schema - (Optional) Custom SCIM attribute configuration. target_settings - (Required) Configuration fields that includes credentials to target SaaS application. type - (Required) The SaaS plugin type.","title":"OutboundProvision"},{"location":"resources/pingfederate_idp_sp_connections/#spbrowsersso","text":"The sp_browser_sso block - The SAML settings used to enable secure browser-based SSO to resources at your partner's site. adapter_mappings - (Required) A list of adapters that map to outgoing assertions. artifact - (Optional) The settings for an artifact binding. assertion_lifetime - (Required) The timeframe of validity before and after the issuance of the assertion. attribute_contract - (Required) A set of user attributes that the IdP sends in the SAML assertion. authentication_policy_contract_assertion_mappings - (Optional) A list of authentication policy contracts that map to outgoing assertions. default_target_url - (Optional) Default Target URL for SAML1.x connections. For SP connections, this default URL represents the destination on the SP where the user will be directed. For IdP connections, entering a URL in the Default Target URL field overrides the SP Default URL SSO setting. enabled_profiles - (Optional) The profiles that are enabled for browser-based SSO. SAML 2.0 supports all profiles whereas SAML 1.x IdP connections support both IdP and SP (non-standard) initiated SSO. This is required for SAMLx.x Connections. encryption_policy - (Required) The SAML 2.0 encryption policy for browser-based SSO. Required for SAML 2.0 connections. incoming_bindings - (Optional) The SAML bindings that are enabled for browser-based SSO. This is required for SAML 2.0 connections. For SAML 1.x based connections, it is not used for SP Connections and it is optional for IdP Connections. message_customizations - (Optional) The message customizations for browser-based SSO. Depending on server settings, connection type, and protocol this may or may not be supported. protocol - (Required) The browser-based SSO protocol to use. require_signed_authn_requests - (Optional) Require AuthN requests to be signed when received via the POST or Redirect bindings. sign_assertions - (Optional) Always sign the SAML Assertion. sign_response_as_required - (Optional) Sign SAML Response as required by the associated binding and encryption policy. Applicable to SAML2.0 only and is defaulted to true. It can be set to false only on SAML2.0 connections when signAssertions is set to true. slo_service_endpoints - (Optional) A list of possible endpoints to send SLO requests and responses. sp_saml_identity_mapping - (Optional) Process in which users authenticated by the IdP are associated with user accounts local to the SP. sp_ws_fed_identity_mapping - (Optional) Process in which users authenticated by the IdP are associated with user accounts local to the SP for WS-Federation connection types. sso_service_endpoints - (Required) A list of possible endpoints to send assertions to. url_whitelist_entries - (Optional) For WS-Federation connections, a whitelist of additional allowed domains and paths used to validate wreply for SLO, if enabled. ws_fed_token_type - (Optional) The WS-Federation Token Type to use. ws_trust_version - (Optional) The WS-Trust version for a WS-Federation connection. The default version is WSTRUST12.","title":"SpBrowserSso"},{"location":"resources/pingfederate_idp_sp_connections/#spwstrust","text":"The sp_ws_trust block - Ws-Trust STS provides security-token validation and creation to extend SSO access to identity-enabled Web Services abort_if_not_fulfilled_from_request - (Optional) If the attribute contract cannot be fulfilled using data from the Request, abort the transaction. attribute_contract - (Required) A set of user attributes that the IdP sends in the token. default_token_type - (Optional) The default token type when a web service client (WSC) does not specify in the token request which token type the STS should issue. Defaults to SAML 2.0. encrypt_saml2_assertion - (Optional) When selected, the STS encrypts the SAML 2.0 assertion. Applicable only to SAML 2.0 security token. This option does not apply to OAuth assertion profiles. generate_key - (Optional) When selected, the STS generates a symmetric key to be used in conjunction with the \"Holder of Key\" (HoK) designation for the assertion's Subject Confirmation Method. This option does not apply to OAuth assertion profiles. message_customizations - (Optional) The message customizations for WS-Trust. Depending on server settings, connection type, and protocol this may or may not be supported. minutes_after - (Optional) The amount of time after the SAML token was issued during which it is to be considered valid. The default value is 30. minutes_before - (Optional) The amount of time before the SAML token was issued during which it is to be considered valid. The default value is 5. o_auth_assertion_profiles - (Optional) When selected, four additional token-type requests become available. partner_service_ids - (Required) The partner service identifiers. request_contract_ref - (Optional) Request Contract to be used to map attribute values into the security token. token_processor_mappings - (Required) A list of token processors to validate incoming tokens.","title":"SpWsTrust"},{"location":"resources/pingfederate_idp_sp_connections/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The idp sp connections ID ( connection_id )","title":"Attributes Reference"},{"location":"resources/pingfederate_idp_sp_connections/#import","text":"IDP SP Connections can be imported using the id, e.g. terraform import pingfederate_idp_sp_connection.demo 123","title":"Import"},{"location":"resources/pingfederate_keypair_signing/","text":"Resource: pingfederate_keypair_signing Provides a signing keypair. Example Usage Generating a KeyPair resource \"pingfederate_keypair_signing\" \"example\" { city = \"London\" common_name = \"Example\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Testing\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 subject_alternative_names = [\"examle.com\", \"another.com\"] } Importing a KeyPair resource \"pingfederate_keypair_signing\" \"example\" { file_data = filebase64(\"keystore.p12\") password = \"changeit\" } Argument Attributes The following arguments are supported: Importing a KeyPair crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. file_data - (Required) Base64 encoded PKCS12 file data. New line characters should be omitted or encoded in this value. password - (Required) Password for the PKCS12 file. Generating a KeyPair city - (Optional) City. common_name - (Required) Common name for key pair subject. country - (Required) Country. crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. key_algorithm - (Required) Key generation algorithm. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint. key_size - (Optional) Key size, in bits. If this property is unset, the default size for the key algorithm will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint. organization - (Required) Organization. organization_unit - (Optional) Organization unit. signature_algorithm - (Optional) Signature algorithm. If this property is unset, the default signature algorithm for the key algorithm will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint. state - (Optional) State. subject_alternative_names - (Optional) The subject alternative names (SAN). valid_days - (Required) Number of days the key pair will be valid for. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The keypair ID ( keypair_id ) crypto_provider - Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. expires - The end date up until which the item is valid, in ISO 8601 format (UTC). issuer_dn - The issuer's distinguished name. key_algorithm - The public key algorithm. key_size - The public key size. serial_number - The serial number assigned by the CA. sha1_fingerprint - SHA-1 fingerprint in Hex encoding. sha256_fingerprint - SHA-256 fingerprint in Hex encoding. signature_algorithm - The signature algorithm. status - Status of the item. subject_alternative_names - The subject alternative names (SAN). subject_dn - The subject's distinguished name. valid_from - The start date from which the item is valid, in ISO 8601 format (UTC). version - The X.509 version to which the item conforms. Import Signing KeyPairs can be imported using the id, e.g. -> This is currently only supported for generated KeyPairs. terraform import pingfederate_keypair_signing.demo 123","title":"Resource: pingfederate_keypair_signing"},{"location":"resources/pingfederate_keypair_signing/#resource-pingfederate_keypair_signing","text":"Provides a signing keypair.","title":"Resource: pingfederate_keypair_signing"},{"location":"resources/pingfederate_keypair_signing/#example-usage","text":"","title":"Example Usage"},{"location":"resources/pingfederate_keypair_signing/#generating-a-keypair","text":"resource \"pingfederate_keypair_signing\" \"example\" { city = \"London\" common_name = \"Example\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Testing\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 subject_alternative_names = [\"examle.com\", \"another.com\"] }","title":"Generating a KeyPair"},{"location":"resources/pingfederate_keypair_signing/#importing-a-keypair","text":"resource \"pingfederate_keypair_signing\" \"example\" { file_data = filebase64(\"keystore.p12\") password = \"changeit\" }","title":"Importing a KeyPair"},{"location":"resources/pingfederate_keypair_signing/#argument-attributes","text":"The following arguments are supported: Importing a KeyPair crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. file_data - (Required) Base64 encoded PKCS12 file data. New line characters should be omitted or encoded in this value. password - (Required) Password for the PKCS12 file. Generating a KeyPair city - (Optional) City. common_name - (Required) Common name for key pair subject. country - (Required) Country. crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. key_algorithm - (Required) Key generation algorithm. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint. key_size - (Optional) Key size, in bits. If this property is unset, the default size for the key algorithm will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint. organization - (Required) Organization. organization_unit - (Optional) Organization unit. signature_algorithm - (Optional) Signature algorithm. If this property is unset, the default signature algorithm for the key algorithm will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint. state - (Optional) State. subject_alternative_names - (Optional) The subject alternative names (SAN). valid_days - (Required) Number of days the key pair will be valid for.","title":"Argument Attributes"},{"location":"resources/pingfederate_keypair_signing/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The keypair ID ( keypair_id ) crypto_provider - Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. expires - The end date up until which the item is valid, in ISO 8601 format (UTC). issuer_dn - The issuer's distinguished name. key_algorithm - The public key algorithm. key_size - The public key size. serial_number - The serial number assigned by the CA. sha1_fingerprint - SHA-1 fingerprint in Hex encoding. sha256_fingerprint - SHA-256 fingerprint in Hex encoding. signature_algorithm - The signature algorithm. status - Status of the item. subject_alternative_names - The subject alternative names (SAN). subject_dn - The subject's distinguished name. valid_from - The start date from which the item is valid, in ISO 8601 format (UTC). version - The X.509 version to which the item conforms.","title":"Attributes Reference"},{"location":"resources/pingfederate_keypair_signing/#import","text":"Signing KeyPairs can be imported using the id, e.g. -> This is currently only supported for generated KeyPairs. terraform import pingfederate_keypair_signing.demo 123","title":"Import"},{"location":"resources/pingfederate_keypair_signing_csr/","text":"Resource: pingfederate_keypair_signing_csr Provides a ssl server keypair csr. Example Usage Signing a CSR with an example tls signer resource \"pingfederate_keypair_signing\" \"test_generate\" { city = \"Test\" common_name = \"Test\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Test\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 } data \"pingfederate_keypair_signing_csr\" \"csr\" { id = pingfederate_keypair_signing . test_generate . id } resource \"pingfederate_keypair_signing_csr\" \"test\" { keypair_id = pingfederate_keypair_signing . test_generate . id file_data = base64encode ( tls_locally_signed_cert . example . cert_pem ) } resource \"pingfederate_certificates_ca\" \"demo\" { file_data = base64encode ( tls_self_signed_cert . example . cert_pem ) } resource \"tls_private_key\" \"example\" { algorithm = \"RSA\" rsa_bits = 2048 } resource \"tls_locally_signed_cert\" \"example\" { cert_request_pem = data . pingfederate_keypair_signing_csr . csr . cert_request_pem ca_key_algorithm = \"RSA\" ca_private_key_pem = tls_private_key . example . private_key_pem ca_cert_pem = tls_self_signed_cert . example . cert_pem validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] } resource \"tls_self_signed_cert\" \"example\" { key_algorithm = \"RSA\" private_key_pem = tls_private_key . example . private_key_pem subject { common_name = \"example.com\" organization = \"ACME Examples, Inc\" } validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] } Argument Attributes The following arguments are supported: keypair_id - (Required) The ID for the keypair file_data - (Required) The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value. Attributes Reference None","title":"Resource: pingfederate_keypair_signing_csr"},{"location":"resources/pingfederate_keypair_signing_csr/#resource-pingfederate_keypair_signing_csr","text":"Provides a ssl server keypair csr.","title":"Resource: pingfederate_keypair_signing_csr"},{"location":"resources/pingfederate_keypair_signing_csr/#example-usage","text":"","title":"Example Usage"},{"location":"resources/pingfederate_keypair_signing_csr/#signing-a-csr-with-an-example-tls-signer","text":"resource \"pingfederate_keypair_signing\" \"test_generate\" { city = \"Test\" common_name = \"Test\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Test\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 } data \"pingfederate_keypair_signing_csr\" \"csr\" { id = pingfederate_keypair_signing . test_generate . id } resource \"pingfederate_keypair_signing_csr\" \"test\" { keypair_id = pingfederate_keypair_signing . test_generate . id file_data = base64encode ( tls_locally_signed_cert . example . cert_pem ) } resource \"pingfederate_certificates_ca\" \"demo\" { file_data = base64encode ( tls_self_signed_cert . example . cert_pem ) } resource \"tls_private_key\" \"example\" { algorithm = \"RSA\" rsa_bits = 2048 } resource \"tls_locally_signed_cert\" \"example\" { cert_request_pem = data . pingfederate_keypair_signing_csr . csr . cert_request_pem ca_key_algorithm = \"RSA\" ca_private_key_pem = tls_private_key . example . private_key_pem ca_cert_pem = tls_self_signed_cert . example . cert_pem validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] } resource \"tls_self_signed_cert\" \"example\" { key_algorithm = \"RSA\" private_key_pem = tls_private_key . example . private_key_pem subject { common_name = \"example.com\" organization = \"ACME Examples, Inc\" } validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] }","title":"Signing a CSR with an example tls signer"},{"location":"resources/pingfederate_keypair_signing_csr/#argument-attributes","text":"The following arguments are supported: keypair_id - (Required) The ID for the keypair file_data - (Required) The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value.","title":"Argument Attributes"},{"location":"resources/pingfederate_keypair_signing_csr/#attributes-reference","text":"None","title":"Attributes Reference"},{"location":"resources/pingfederate_keypair_ssl_server/","text":"Resource: pingfederate_keypair_ssl_server Provides a ssl server keypair. Example Usage Generating a KeyPair resource \"pingfederate_keypair_ssl_server\" \"example\" { city = \"London\" common_name = \"Example\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Testing\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 subject_alternative_names = [\"examle.com\", \"another.com\"] } Importing a KeyPair resource \"pingfederate_keypair_ssl_server\" \"example\" { file_data = filebase64(\"keystore.p12\") password = \"changeit\" } Argument Attributes The following arguments are supported: Importing a KeyPair crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. file_data - (Required) Base64 encoded PKCS12 file data. New line characters should be omitted or encoded in this value. password - (Required) Password for the PKCS12 file. Generating a KeyPair city - (Optional) City. common_name - (Required) Common name for key pair subject. country - (Required) Country. crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. key_algorithm - (Required) Key generation algorithm. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint. key_size - (Optional) Key size, in bits. If this property is unset, the default size for the key algorithm will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint. organization - (Required) Organization. organization_unit - (Optional) Organization unit. signature_algorithm - (Optional) Signature algorithm. If this property is unset, the default signature algorithm for the key algorithm will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint. state - (Optional) State. subject_alternative_names - (Optional) The subject alternative names (SAN). valid_days - (Required) Number of days the key pair will be valid for. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The keypair ID ( keypair_id ) crypto_provider - Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. expires - The end date up until which the item is valid, in ISO 8601 format (UTC). issuer_dn - The issuer's distinguished name. key_algorithm - The public key algorithm. key_size - The public key size. serial_number - The serial number assigned by the CA. sha1_fingerprint - SHA-1 fingerprint in Hex encoding. sha256_fingerprint - SHA-256 fingerprint in Hex encoding. signature_algorithm - The signature algorithm. status - Status of the item. subject_alternative_names - The subject alternative names (SAN). subject_dn - The subject's distinguished name. valid_from - The start date from which the item is valid, in ISO 8601 format (UTC). version - The X.509 version to which the item conforms. Import SSL Server KeyPairs can be imported using the id, e.g. -> This is currently only supported for generated KeyPairs. terraform import pingfederate_keypair_ssl_server.demo 123","title":"Resource: pingfederate_keypair_ssl_server"},{"location":"resources/pingfederate_keypair_ssl_server/#resource-pingfederate_keypair_ssl_server","text":"Provides a ssl server keypair.","title":"Resource: pingfederate_keypair_ssl_server"},{"location":"resources/pingfederate_keypair_ssl_server/#example-usage","text":"","title":"Example Usage"},{"location":"resources/pingfederate_keypair_ssl_server/#generating-a-keypair","text":"resource \"pingfederate_keypair_ssl_server\" \"example\" { city = \"London\" common_name = \"Example\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Testing\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 subject_alternative_names = [\"examle.com\", \"another.com\"] }","title":"Generating a KeyPair"},{"location":"resources/pingfederate_keypair_ssl_server/#importing-a-keypair","text":"resource \"pingfederate_keypair_ssl_server\" \"example\" { file_data = filebase64(\"keystore.p12\") password = \"changeit\" }","title":"Importing a KeyPair"},{"location":"resources/pingfederate_keypair_ssl_server/#argument-attributes","text":"The following arguments are supported: Importing a KeyPair crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. file_data - (Required) Base64 encoded PKCS12 file data. New line characters should be omitted or encoded in this value. password - (Required) Password for the PKCS12 file. Generating a KeyPair city - (Optional) City. common_name - (Required) Common name for key pair subject. country - (Required) Country. crypto_provider - (Optional) Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. key_algorithm - (Required) Key generation algorithm. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint. key_size - (Optional) Key size, in bits. If this property is unset, the default size for the key algorithm will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint. organization - (Required) Organization. organization_unit - (Optional) Organization unit. signature_algorithm - (Optional) Signature algorithm. If this property is unset, the default signature algorithm for the key algorithm will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint. state - (Optional) State. subject_alternative_names - (Optional) The subject alternative names (SAN). valid_days - (Required) Number of days the key pair will be valid for.","title":"Argument Attributes"},{"location":"resources/pingfederate_keypair_ssl_server/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The keypair ID ( keypair_id ) crypto_provider - Cryptographic Provider. This is only applicable if Hybrid HSM mode is true. expires - The end date up until which the item is valid, in ISO 8601 format (UTC). issuer_dn - The issuer's distinguished name. key_algorithm - The public key algorithm. key_size - The public key size. serial_number - The serial number assigned by the CA. sha1_fingerprint - SHA-1 fingerprint in Hex encoding. sha256_fingerprint - SHA-256 fingerprint in Hex encoding. signature_algorithm - The signature algorithm. status - Status of the item. subject_alternative_names - The subject alternative names (SAN). subject_dn - The subject's distinguished name. valid_from - The start date from which the item is valid, in ISO 8601 format (UTC). version - The X.509 version to which the item conforms.","title":"Attributes Reference"},{"location":"resources/pingfederate_keypair_ssl_server/#import","text":"SSL Server KeyPairs can be imported using the id, e.g. -> This is currently only supported for generated KeyPairs. terraform import pingfederate_keypair_ssl_server.demo 123","title":"Import"},{"location":"resources/pingfederate_keypair_ssl_server_csr/","text":"Resource: pingfederate_keypair_ssl_server_csr Provides a ssl server keypair csr. Example Usage Signing a CSR with an example tls signer resource \"pingfederate_keypair_ssl_server\" \"test_generate\" { city = \"Test\" common_name = \"Test\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Test\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 } data \"pingfederate_keypair_ssl_server_csr\" \"csr\" { id = pingfederate_keypair_ssl_server . test_generate . id } resource \"pingfederate_keypair_ssl_server_csr\" \"test\" { keypair_id = pingfederate_keypair_ssl_server . test_generate . id file_data = base64encode ( tls_locally_signed_cert . example . cert_pem ) } resource \"pingfederate_certificates_ca\" \"demo\" { file_data = base64encode ( tls_self_signed_cert . example . cert_pem ) } resource \"tls_private_key\" \"example\" { algorithm = \"RSA\" rsa_bits = 2048 } resource \"tls_locally_signed_cert\" \"example\" { cert_request_pem = data . pingfederate_keypair_ssl_server_csr . csr . cert_request_pem ca_key_algorithm = \"RSA\" ca_private_key_pem = tls_private_key . example . private_key_pem ca_cert_pem = tls_self_signed_cert . example . cert_pem validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] } resource \"tls_self_signed_cert\" \"example\" { key_algorithm = \"RSA\" private_key_pem = tls_private_key . example . private_key_pem subject { common_name = \"example.com\" organization = \"ACME Examples, Inc\" } validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] } Argument Attributes The following arguments are supported: keypair_id - (Required) The ID for the keypair file_data - (Required) The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value. Attributes Reference None","title":"Resource: pingfederate_keypair_ssl_server_csr"},{"location":"resources/pingfederate_keypair_ssl_server_csr/#resource-pingfederate_keypair_ssl_server_csr","text":"Provides a ssl server keypair csr.","title":"Resource: pingfederate_keypair_ssl_server_csr"},{"location":"resources/pingfederate_keypair_ssl_server_csr/#example-usage","text":"","title":"Example Usage"},{"location":"resources/pingfederate_keypair_ssl_server_csr/#signing-a-csr-with-an-example-tls-signer","text":"resource \"pingfederate_keypair_ssl_server\" \"test_generate\" { city = \"Test\" common_name = \"Test\" country = \"GB\" key_algorithm = \"RSA\" key_size = 2048 organization = \"Test\" organization_unit = \"Test\" state = \"Test\" valid_days = 365 } data \"pingfederate_keypair_ssl_server_csr\" \"csr\" { id = pingfederate_keypair_ssl_server . test_generate . id } resource \"pingfederate_keypair_ssl_server_csr\" \"test\" { keypair_id = pingfederate_keypair_ssl_server . test_generate . id file_data = base64encode ( tls_locally_signed_cert . example . cert_pem ) } resource \"pingfederate_certificates_ca\" \"demo\" { file_data = base64encode ( tls_self_signed_cert . example . cert_pem ) } resource \"tls_private_key\" \"example\" { algorithm = \"RSA\" rsa_bits = 2048 } resource \"tls_locally_signed_cert\" \"example\" { cert_request_pem = data . pingfederate_keypair_ssl_server_csr . csr . cert_request_pem ca_key_algorithm = \"RSA\" ca_private_key_pem = tls_private_key . example . private_key_pem ca_cert_pem = tls_self_signed_cert . example . cert_pem validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] } resource \"tls_self_signed_cert\" \"example\" { key_algorithm = \"RSA\" private_key_pem = tls_private_key . example . private_key_pem subject { common_name = \"example.com\" organization = \"ACME Examples, Inc\" } validity_period_hours = 12 allowed_uses = [ \"key_encipherment\" , \"digital_signature\" , \"server_auth\" , ] }","title":"Signing a CSR with an example tls signer"},{"location":"resources/pingfederate_keypair_ssl_server_csr/#argument-attributes","text":"The following arguments are supported: keypair_id - (Required) The ID for the keypair file_data - (Required) The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value.","title":"Argument Attributes"},{"location":"resources/pingfederate_keypair_ssl_server_csr/#attributes-reference","text":"None","title":"Attributes Reference"},{"location":"resources/pingfederate_keypair_ssl_server_settings/","text":"Resource: pingfederate_keypair_ssl_server_settings Provides a ssl server keypair settings. -> This resource manages a singleton within PingFederate and as such you should ONLY ever declare one of this resource type. Deleting this resource simply stops terraform tracking and updating the configuration. Example Usage resource \"pingfederate_keypair_ssl_server_settings\" \"example\" { admin_server_cert = pingfederate_keypair_ssl_server.demo.id runtime_server_cert = pingfederate_keypair_ssl_server.demo.id active_runtime_server_certs = [pingfederate_keypair_ssl_server.demo.id] active_admin_server_certs = [pingfederate_keypair_ssl_server.demo.id] } Argument Attributes The following arguments are supported: admin_server_cert - (Required) Reference to the default SSL Server Certificate Key pair active for PF Administrator Console. runtime_server_cert - (Required) Reference to the default SSL Server Certificate Key pair active for Runtime Server. active_admin_server_certs - (Required) The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value. active_runtime_server_certs - (Required) The active SSL Server Certificate Key pairs for PF Administrator Console.","title":"Resource: pingfederate_keypair_ssl_server_settings"},{"location":"resources/pingfederate_keypair_ssl_server_settings/#resource-pingfederate_keypair_ssl_server_settings","text":"Provides a ssl server keypair settings. -> This resource manages a singleton within PingFederate and as such you should ONLY ever declare one of this resource type. Deleting this resource simply stops terraform tracking and updating the configuration.","title":"Resource: pingfederate_keypair_ssl_server_settings"},{"location":"resources/pingfederate_keypair_ssl_server_settings/#example-usage","text":"resource \"pingfederate_keypair_ssl_server_settings\" \"example\" { admin_server_cert = pingfederate_keypair_ssl_server.demo.id runtime_server_cert = pingfederate_keypair_ssl_server.demo.id active_runtime_server_certs = [pingfederate_keypair_ssl_server.demo.id] active_admin_server_certs = [pingfederate_keypair_ssl_server.demo.id] }","title":"Example Usage"},{"location":"resources/pingfederate_keypair_ssl_server_settings/#argument-attributes","text":"The following arguments are supported: admin_server_cert - (Required) Reference to the default SSL Server Certificate Key pair active for PF Administrator Console. runtime_server_cert - (Required) Reference to the default SSL Server Certificate Key pair active for Runtime Server. active_admin_server_certs - (Required) The CSR response file data in PKCS7 format or as an X.509 certificate. PEM encoding (with or without the header and footer lines) is required. New line characters should be omitted or encoded in this value. active_runtime_server_certs - (Required) The active SSL Server Certificate Key pairs for PF Administrator Console.","title":"Argument Attributes"},{"location":"resources/pingfederate_notification_publisher/","text":"Resource: pingfederate_notification_publisher Provides a notification publisher. Example Usage resource \"pingfederate_notification_publisher\" \"demo\" { name = \"bar\" publisher_id = \"foo1\" plugin_descriptor_ref { id = \"com.pingidentity.email.SmtpNotificationPlugin\" } configuration { fields { name = \"From Address\" value = \"help@foo.org\" } fields { name = \"Email Server\" value = \"foo\" } fields { name = \"SMTP Port\" value = \"25\" } fields { name = \"Encryption Method\" value = \"NONE\" } fields { name = \"SMTPS Port\" value = \"465\" } fields { name = \"Verify Hostname\" value = \"true\" } fields { name = \"Username\" value = \"\" } fields { name = \"Password\" value = \"\" } fields { name = \"Test Address\" value = \"\" } fields { name = \"Connection Timeout\" value = \"30\" } fields { name = \"Retry Attempt\" value = \"2\" } fields { name = \"Retry Delay\" value = \"2\" } fields { name = \"Enable SMTP Debugging Messages\" value = \"false\" } } } Argument Attributes The following arguments are supported: name - (Required) The plugin instance name. The name cannot be modified once the instance is created. publisher_id - (Required) The ID of the plugin instance. The ID cannot be modified once the instance is created. Parent Ref The parent_ref block allows you to specify the id and query the attribute location id - The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent instances. Plugin Descriptor Ref The plugin_descriptor_ref block allows you to specify the id and query the attribute location id - (Required) Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is created. Configuration The configuration block allows you to specify the fields and tables for the plugin configuration fields - List of configuration fields blocks. sensitive_fields - List of sensitive configuration fields blocks which are masked by terraform. tables - List of configuration tables blocks. Configuration Fields The fields / sensitive_fields block the configuration fields for a root configuration or configuration row. name - The name of the configuration field. value - The value for the configuration field. inherited - Whether this field is inherited from its parent instance. If true, the value value properties become read-only. The default value is false. Configuration Tables The tables block for the root configuration. name - The name of the table. rows - List of table rows. inherited - Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false. Configuration Rows The rows block for each of the tables blocks. fields - List of configuration fields blocks. sensitive_fields - List of sensitive configuration fields blocks which are masked by terraform. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The ID of the plugin instance ( publisher_id ). Import Notification Publisher can be imported using the id, e.g. terraform import pingfederate_notification_publisher.demo 123","title":"pingfederate_notification_publisher"},{"location":"resources/pingfederate_notification_publisher/#resource-pingfederate_notification_publisher","text":"Provides a notification publisher.","title":"Resource: pingfederate_notification_publisher"},{"location":"resources/pingfederate_notification_publisher/#example-usage","text":"resource \"pingfederate_notification_publisher\" \"demo\" { name = \"bar\" publisher_id = \"foo1\" plugin_descriptor_ref { id = \"com.pingidentity.email.SmtpNotificationPlugin\" } configuration { fields { name = \"From Address\" value = \"help@foo.org\" } fields { name = \"Email Server\" value = \"foo\" } fields { name = \"SMTP Port\" value = \"25\" } fields { name = \"Encryption Method\" value = \"NONE\" } fields { name = \"SMTPS Port\" value = \"465\" } fields { name = \"Verify Hostname\" value = \"true\" } fields { name = \"Username\" value = \"\" } fields { name = \"Password\" value = \"\" } fields { name = \"Test Address\" value = \"\" } fields { name = \"Connection Timeout\" value = \"30\" } fields { name = \"Retry Attempt\" value = \"2\" } fields { name = \"Retry Delay\" value = \"2\" } fields { name = \"Enable SMTP Debugging Messages\" value = \"false\" } } }","title":"Example Usage"},{"location":"resources/pingfederate_notification_publisher/#argument-attributes","text":"The following arguments are supported: name - (Required) The plugin instance name. The name cannot be modified once the instance is created. publisher_id - (Required) The ID of the plugin instance. The ID cannot be modified once the instance is created.","title":"Argument Attributes"},{"location":"resources/pingfederate_notification_publisher/#parent-ref","text":"The parent_ref block allows you to specify the id and query the attribute location id - The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent instances.","title":"Parent Ref"},{"location":"resources/pingfederate_notification_publisher/#plugin-descriptor-ref","text":"The plugin_descriptor_ref block allows you to specify the id and query the attribute location id - (Required) Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is created.","title":"Plugin Descriptor Ref"},{"location":"resources/pingfederate_notification_publisher/#configuration","text":"The configuration block allows you to specify the fields and tables for the plugin configuration fields - List of configuration fields blocks. sensitive_fields - List of sensitive configuration fields blocks which are masked by terraform. tables - List of configuration tables blocks.","title":"Configuration"},{"location":"resources/pingfederate_notification_publisher/#configuration-fields","text":"The fields / sensitive_fields block the configuration fields for a root configuration or configuration row. name - The name of the configuration field. value - The value for the configuration field. inherited - Whether this field is inherited from its parent instance. If true, the value value properties become read-only. The default value is false.","title":"Configuration Fields"},{"location":"resources/pingfederate_notification_publisher/#configuration-tables","text":"The tables block for the root configuration. name - The name of the table. rows - List of table rows. inherited - Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.","title":"Configuration Tables"},{"location":"resources/pingfederate_notification_publisher/#configuration-rows","text":"The rows block for each of the tables blocks. fields - List of configuration fields blocks. sensitive_fields - List of sensitive configuration fields blocks which are masked by terraform.","title":"Configuration Rows"},{"location":"resources/pingfederate_notification_publisher/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The ID of the plugin instance ( publisher_id ).","title":"Attributes Reference"},{"location":"resources/pingfederate_notification_publisher/#import","text":"Notification Publisher can be imported using the id, e.g. terraform import pingfederate_notification_publisher.demo 123","title":"Import"},{"location":"resources/pingfederate_oauth_client/","text":"Resource: pingfederate_oauth_client Provides an OAuth Client. Example Usage resource \"pingfederate_oauth_client\" \"demo\" { client_id = \"demo\" name = \"demo\" grant_types = [ \"EXTENSION\" , ] client_auth { enforce_replay_prevention = false secret = \"super_top_secret\" type = \"SECRET\" } default_access_token_manager_ref { id = pingfederate_oauth_access_token_manager . demo . id } oidc_policy { grant_access_session_revocation_api = false logout_uris = [ \"https://example.com/logout\" ] ping_access_logout_capable = true } } Argument Attributes The following arguments are supported: bypass_activation_code_confirmation_override - (Optional) Indicates if the Activation Code Confirmation page should be bypassed if 'verification_url_complete' is used by the end user to authorize a device. This overrides the 'bypassUseCodeConfirmation' value present in Authorization Server Settings. bypass_approval_page - (Optional) Use this setting, for example, when you want to deploy a trusted application and authenticate end users via an IdP adapter or IdP connection. ciba_delivery_mode - (Optional) The token delivery mode for the client. The default value is 'POLL'. ciba_notification_endpoint - (Optional) The endpoint the OP will call after a successful or failed end-user authentication. ciba_polling_interval - (Optional) The minimum amount of time in seconds that the Client must wait between polling requests to the token endpoint. The default is 3 seconds. ciba_request_object_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm that must be used to sign the CIBA Request Object. All signing algorithms are allowed if value is not present RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11. ciba_require_signed_requests - (Optional) Determines whether CIBA signed requests are required for this client. ciba_user_code_supported - (Optional) Determines whether CIBA user code is supported for this client. client_auth - (Optional) Client authentication settings. If this model is null, it indicates that no client authentication will be used. client_id - (Required) A unique identifier the client provides to the Resource Server to identify itself. This identifier is included with every request the client makes. For PUT requests, this field is optional and it will be overridden by the 'id' parameter of the PUT request. default_access_token_manager_ref - (Optional) The default access token manager for this client. description - (Optional) A description of what the client application does. This description appears when the user is prompted for authorization. device_flow_setting_type - (Optional) Allows an administrator to override the Device Authorization Settings set globally for the OAuth AS. Defaults to SERVER_DEFAULT. device_polling_interval_override - (Optional) The amount of time client should wait between polling requests, in seconds. This overrides the 'devicePollingInterval' value present in Authorization Server Settings. enabled - (Optional) Specifies whether the client is enabled. The default value is true. exclusive_scopes - (Optional) The exclusive scopes available for this client. extended_parameters - (Optional) OAuth Client Metadata can be extended to use custom Client Metadata Parameters. The names of these custom parameters should be defined in /extendedProperties. grant_types - (Required) The grant types allowed for this client. The EXTENSION grant type applies to SAML/JWT assertion grants. jwks_settings - (Optional) JSON Web Key Set Settings of the OAuth client. Required if private key JWT client authentication or signed requests is enabled. logo_url - (Optional) The location of the logo used on user-facing OAuth grant authorization and revocation pages. name - (Required) A descriptive name for the client instance. This name appears when the user is prompted for authorization. oidc_policy - (Optional) Open ID Connect Policy settings. This is included in the message only when OIDC is enabled. pending_authorization_timeout_override - (Optional) The 'device_code' and 'user_code' timeout, in seconds. This overrides the 'pendingAuthorizationTimeout' value present in Authorization Server Settings. persistent_grant_expiration_time - (Optional) The persistent grant expiration time. -1 indicates an indefinite amount of time. persistent_grant_expiration_time_unit - (Optional) The persistent grant expiration time unit. persistent_grant_expiration_type - (Optional) Allows an administrator to override the Persistent Grant Lifetime set globally for the OAuth AS. Defaults to SERVER_DEFAULT. persistent_grant_idle_timeout - (Optional) The persistent grant idle timeout. persistent_grant_idle_timeout_time_unit - (Optional) The persistent grant idle timeout time unit. persistent_grant_idle_timeout_type - (Optional) Allows an administrator to override the Persistent Grant Idle Timeout set globally for the OAuth AS. Defaults to SERVER_DEFAULT. redirect_uris - (Optional) URIs to which the OAuth AS may redirect the resource owner's user agent after authorization is obtained. A redirection URI is used with the Authorization Code and Implicit grant types. Wildcards are allowed. However, for security reasons, make the URL as restrictive as possible.For example: https:// .company.com/ Important: If more than one URI is added or if a single URI uses wildcards, then Authorization Code grant and token requests must contain a specific matching redirect uri parameter. refresh_rolling - (Optional) Use ROLL or DONT_ROLL to override the Roll Refresh Token Values setting on the Authorization Server Settings. SERVER_DEFAULT will default to the Roll Refresh Token Values setting on the Authorization Server Setting screen. Defaults to SERVER_DEFAULT. request_object_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm that must be used to sign the Request Object. All signing algorithms are allowed if value is not present RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11. request_policy_ref - (Optional) The CIBA request policy. require_proof_key_for_code_exchange - (Optional) Determines whether Proof Key for Code Exchange (PKCE) is required for this client. require_signed_requests - (Optional) Determines whether signed requests are required for this client restrict_scopes - (Optional) Restricts this client's access to specific scopes. restricted_response_types - (Optional) The response types allowed for this client. If omitted all response types are available to the client. restricted_scopes - (Optional) The scopes available for this client. token_exchange_processor_policy_ref - (Optional) The Token Exchange Processor policy. user_authorization_url_override - (Optional) The URL used as 'verification_url' and 'verification_url_complete' values in a Device Authorization request. This property overrides the 'userAuthorizationUrl' value present in Authorization Server Settings. validate_using_all_eligible_atms - (Optional) Validates token using all eligible access token managers for the client. client_auth The client_auth block - Client Authentication. client_cert_issuer_dn - (Optional) Client TLS Certificate Issuer DN. client_cert_subject_dn - (Optional) Client TLS Certificate Subject DN. enforce_replay_prevention - (Optional) Enforce replay prevention on JSON Web Tokens. This field is applicable only for Private Key JWT Client Authentication. secret - (Optional) Client secret for Basic Authentication. To update the client secret, specify the plaintext value in this field. This field will not be populated for GET requests. token_endpoint_auth_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm that must be used to sign the JSON Web Tokens. This field is applicable only for Private Key JWT Client Authentication. All signing algorithms are allowed if value is not present RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11. type - (Optional) Client authentication type. The required field for type SECRET is secret. The required fields for type CERTIFICATE are clientCertIssuerDn and clientCertSubjectDn. The required field for type PRIVATE_KEY_JWT is: either jwks or jwksUrl. oidc_policy The oidc_policy block - OAuth Client Open ID Connect Policy. grant_access_session_revocation_api - (Optional) Determines whether this client is allowed to access the Session Revocation API. id_token_content_encryption_algorithm - (Optional) The JSON Web Encryption [JWE] content encryption algorithm for the ID Token. AES_128_CBC_HMAC_SHA_256 - Composite AES-CBC-128 HMAC-SHA-256 AES_192_CBC_HMAC_SHA_384 - Composite AES-CBC-192 HMAC-SHA-384 AES_256_CBC_HMAC_SHA_512 - Composite AES-CBC-256 HMAC-SHA-512 AES-GCM-128 - AES_128_GCM AES_192_GCM - AES-GCM-192 AES_256_GCM - AES-GCM-256 id_token_encryption_algorithm - (Optional) The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content encryption key for the ID Token. DIR - Direct Encryption with symmetric key A128KW - AES-128 Key Wrap A192KW - AES-192 Key Wrap A256KW - AES-256 Key Wrap A128GCMKW - AES-GCM-128 key encryption A192GCMKW - AES-GCM-192 key encryption A256GCMKW - AES-GCM-256 key encryption ECDH_ES - ECDH-ES ECDH_ES_A128KW - ECDH-ES with AES-128 Key Wrap ECDH_ES_A192KW - ECDH-ES with AES-192 Key Wrap ECDH_ES_A256KW - ECDH-ES with AES-256 Key Wrap RSA_OAEP - RSAES OAEP id_token_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm required for the ID Token. NONE - No signing algorithm HS256 - HMAC using SHA-256 HS384 - HMAC using SHA-384 HS512 - HMAC using SHA-512 RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 A null value will represent the default algorithm which is RS256. RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11 logout_uris - (Optional) A list of client logout URI's which will be invoked when a user logs out through one of PingFederate's SLO endpoints. pairwise_identifier_user_type - (Optional) Determines whether the subject identifier type is pairwise. ping_access_logout_capable - (Optional) Set this value to true if you wish to enable client application logout, and the client is PingAccess, or its logout endpoints follow the PingAccess path convention. policy_group - (Optional) The Open ID Connect policy. A null value will represent the default policy group. sector_identifier_uri - (Optional) The URI references a file with a single JSON array of Redirect URI and JWKS URL values. jwks_settings The jwks_settings block - JSON Web Key Set Settings. jwks - (Optional) JSON Web Key Set (JWKS) document of the OAuth client. Either 'jwks' or 'jwksUrl' must be provided if private key JWT client authentication or signed requests is enabled. If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures. jwks_url - (Optional) JSON Web Key Set (JWKS) URL of the OAuth client. Either 'jwks' or 'jwksUrl' must be provided if private key JWT client authentication or signed requests is enabled. If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures. Attributes Reference In addition to all arguments above, the following attributes are exported: id - The ID of the oauth client ( client_id ). Import OAuth Clients can be imported using the id, e.g. terraform import pingfederate_oauth_client.demo 123","title":"Resource: pingfederate_oauth_client"},{"location":"resources/pingfederate_oauth_client/#resource-pingfederate_oauth_client","text":"Provides an OAuth Client.","title":"Resource: pingfederate_oauth_client"},{"location":"resources/pingfederate_oauth_client/#example-usage","text":"resource \"pingfederate_oauth_client\" \"demo\" { client_id = \"demo\" name = \"demo\" grant_types = [ \"EXTENSION\" , ] client_auth { enforce_replay_prevention = false secret = \"super_top_secret\" type = \"SECRET\" } default_access_token_manager_ref { id = pingfederate_oauth_access_token_manager . demo . id } oidc_policy { grant_access_session_revocation_api = false logout_uris = [ \"https://example.com/logout\" ] ping_access_logout_capable = true } }","title":"Example Usage"},{"location":"resources/pingfederate_oauth_client/#argument-attributes","text":"The following arguments are supported: bypass_activation_code_confirmation_override - (Optional) Indicates if the Activation Code Confirmation page should be bypassed if 'verification_url_complete' is used by the end user to authorize a device. This overrides the 'bypassUseCodeConfirmation' value present in Authorization Server Settings. bypass_approval_page - (Optional) Use this setting, for example, when you want to deploy a trusted application and authenticate end users via an IdP adapter or IdP connection. ciba_delivery_mode - (Optional) The token delivery mode for the client. The default value is 'POLL'. ciba_notification_endpoint - (Optional) The endpoint the OP will call after a successful or failed end-user authentication. ciba_polling_interval - (Optional) The minimum amount of time in seconds that the Client must wait between polling requests to the token endpoint. The default is 3 seconds. ciba_request_object_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm that must be used to sign the CIBA Request Object. All signing algorithms are allowed if value is not present RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11. ciba_require_signed_requests - (Optional) Determines whether CIBA signed requests are required for this client. ciba_user_code_supported - (Optional) Determines whether CIBA user code is supported for this client. client_auth - (Optional) Client authentication settings. If this model is null, it indicates that no client authentication will be used. client_id - (Required) A unique identifier the client provides to the Resource Server to identify itself. This identifier is included with every request the client makes. For PUT requests, this field is optional and it will be overridden by the 'id' parameter of the PUT request. default_access_token_manager_ref - (Optional) The default access token manager for this client. description - (Optional) A description of what the client application does. This description appears when the user is prompted for authorization. device_flow_setting_type - (Optional) Allows an administrator to override the Device Authorization Settings set globally for the OAuth AS. Defaults to SERVER_DEFAULT. device_polling_interval_override - (Optional) The amount of time client should wait between polling requests, in seconds. This overrides the 'devicePollingInterval' value present in Authorization Server Settings. enabled - (Optional) Specifies whether the client is enabled. The default value is true. exclusive_scopes - (Optional) The exclusive scopes available for this client. extended_parameters - (Optional) OAuth Client Metadata can be extended to use custom Client Metadata Parameters. The names of these custom parameters should be defined in /extendedProperties. grant_types - (Required) The grant types allowed for this client. The EXTENSION grant type applies to SAML/JWT assertion grants. jwks_settings - (Optional) JSON Web Key Set Settings of the OAuth client. Required if private key JWT client authentication or signed requests is enabled. logo_url - (Optional) The location of the logo used on user-facing OAuth grant authorization and revocation pages. name - (Required) A descriptive name for the client instance. This name appears when the user is prompted for authorization. oidc_policy - (Optional) Open ID Connect Policy settings. This is included in the message only when OIDC is enabled. pending_authorization_timeout_override - (Optional) The 'device_code' and 'user_code' timeout, in seconds. This overrides the 'pendingAuthorizationTimeout' value present in Authorization Server Settings. persistent_grant_expiration_time - (Optional) The persistent grant expiration time. -1 indicates an indefinite amount of time. persistent_grant_expiration_time_unit - (Optional) The persistent grant expiration time unit. persistent_grant_expiration_type - (Optional) Allows an administrator to override the Persistent Grant Lifetime set globally for the OAuth AS. Defaults to SERVER_DEFAULT. persistent_grant_idle_timeout - (Optional) The persistent grant idle timeout. persistent_grant_idle_timeout_time_unit - (Optional) The persistent grant idle timeout time unit. persistent_grant_idle_timeout_type - (Optional) Allows an administrator to override the Persistent Grant Idle Timeout set globally for the OAuth AS. Defaults to SERVER_DEFAULT. redirect_uris - (Optional) URIs to which the OAuth AS may redirect the resource owner's user agent after authorization is obtained. A redirection URI is used with the Authorization Code and Implicit grant types. Wildcards are allowed. However, for security reasons, make the URL as restrictive as possible.For example: https:// .company.com/ Important: If more than one URI is added or if a single URI uses wildcards, then Authorization Code grant and token requests must contain a specific matching redirect uri parameter. refresh_rolling - (Optional) Use ROLL or DONT_ROLL to override the Roll Refresh Token Values setting on the Authorization Server Settings. SERVER_DEFAULT will default to the Roll Refresh Token Values setting on the Authorization Server Setting screen. Defaults to SERVER_DEFAULT. request_object_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm that must be used to sign the Request Object. All signing algorithms are allowed if value is not present RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11. request_policy_ref - (Optional) The CIBA request policy. require_proof_key_for_code_exchange - (Optional) Determines whether Proof Key for Code Exchange (PKCE) is required for this client. require_signed_requests - (Optional) Determines whether signed requests are required for this client restrict_scopes - (Optional) Restricts this client's access to specific scopes. restricted_response_types - (Optional) The response types allowed for this client. If omitted all response types are available to the client. restricted_scopes - (Optional) The scopes available for this client. token_exchange_processor_policy_ref - (Optional) The Token Exchange Processor policy. user_authorization_url_override - (Optional) The URL used as 'verification_url' and 'verification_url_complete' values in a Device Authorization request. This property overrides the 'userAuthorizationUrl' value present in Authorization Server Settings. validate_using_all_eligible_atms - (Optional) Validates token using all eligible access token managers for the client.","title":"Argument Attributes"},{"location":"resources/pingfederate_oauth_client/#client_auth","text":"The client_auth block - Client Authentication. client_cert_issuer_dn - (Optional) Client TLS Certificate Issuer DN. client_cert_subject_dn - (Optional) Client TLS Certificate Subject DN. enforce_replay_prevention - (Optional) Enforce replay prevention on JSON Web Tokens. This field is applicable only for Private Key JWT Client Authentication. secret - (Optional) Client secret for Basic Authentication. To update the client secret, specify the plaintext value in this field. This field will not be populated for GET requests. token_endpoint_auth_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm that must be used to sign the JSON Web Tokens. This field is applicable only for Private Key JWT Client Authentication. All signing algorithms are allowed if value is not present RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11. type - (Optional) Client authentication type. The required field for type SECRET is secret. The required fields for type CERTIFICATE are clientCertIssuerDn and clientCertSubjectDn. The required field for type PRIVATE_KEY_JWT is: either jwks or jwksUrl.","title":"client_auth"},{"location":"resources/pingfederate_oauth_client/#oidc_policy","text":"The oidc_policy block - OAuth Client Open ID Connect Policy. grant_access_session_revocation_api - (Optional) Determines whether this client is allowed to access the Session Revocation API. id_token_content_encryption_algorithm - (Optional) The JSON Web Encryption [JWE] content encryption algorithm for the ID Token. AES_128_CBC_HMAC_SHA_256 - Composite AES-CBC-128 HMAC-SHA-256 AES_192_CBC_HMAC_SHA_384 - Composite AES-CBC-192 HMAC-SHA-384 AES_256_CBC_HMAC_SHA_512 - Composite AES-CBC-256 HMAC-SHA-512 AES-GCM-128 - AES_128_GCM AES_192_GCM - AES-GCM-192 AES_256_GCM - AES-GCM-256 id_token_encryption_algorithm - (Optional) The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content encryption key for the ID Token. DIR - Direct Encryption with symmetric key A128KW - AES-128 Key Wrap A192KW - AES-192 Key Wrap A256KW - AES-256 Key Wrap A128GCMKW - AES-GCM-128 key encryption A192GCMKW - AES-GCM-192 key encryption A256GCMKW - AES-GCM-256 key encryption ECDH_ES - ECDH-ES ECDH_ES_A128KW - ECDH-ES with AES-128 Key Wrap ECDH_ES_A192KW - ECDH-ES with AES-192 Key Wrap ECDH_ES_A256KW - ECDH-ES with AES-256 Key Wrap RSA_OAEP - RSAES OAEP id_token_signing_algorithm - (Optional) The JSON Web Signature [JWS] algorithm required for the ID Token. NONE - No signing algorithm HS256 - HMAC using SHA-256 HS384 - HMAC using SHA-384 HS512 - HMAC using SHA-512 RS256 - RSA using SHA-256 RS384 - RSA using SHA-384 RS512 - RSA using SHA-512 ES256 - ECDSA using P256 Curve and SHA-256 ES384 - ECDSA using P384 Curve and SHA-384 ES512 - ECDSA using P521 Curve and SHA-512 PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256 PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384 PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512 A null value will represent the default algorithm which is RS256. RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11 logout_uris - (Optional) A list of client logout URI's which will be invoked when a user logs out through one of PingFederate's SLO endpoints. pairwise_identifier_user_type - (Optional) Determines whether the subject identifier type is pairwise. ping_access_logout_capable - (Optional) Set this value to true if you wish to enable client application logout, and the client is PingAccess, or its logout endpoints follow the PingAccess path convention. policy_group - (Optional) The Open ID Connect policy. A null value will represent the default policy group. sector_identifier_uri - (Optional) The URI references a file with a single JSON array of Redirect URI and JWKS URL values.","title":"oidc_policy"},{"location":"resources/pingfederate_oauth_client/#jwks_settings","text":"The jwks_settings block - JSON Web Key Set Settings. jwks - (Optional) JSON Web Key Set (JWKS) document of the OAuth client. Either 'jwks' or 'jwksUrl' must be provided if private key JWT client authentication or signed requests is enabled. If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures. jwks_url - (Optional) JSON Web Key Set (JWKS) URL of the OAuth client. Either 'jwks' or 'jwksUrl' must be provided if private key JWT client authentication or signed requests is enabled. If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures.","title":"jwks_settings"},{"location":"resources/pingfederate_oauth_client/#attributes-reference","text":"In addition to all arguments above, the following attributes are exported: id - The ID of the oauth client ( client_id ).","title":"Attributes Reference"},{"location":"resources/pingfederate_oauth_client/#import","text":"OAuth Clients can be imported using the id, e.g. terraform import pingfederate_oauth_client.demo 123","title":"Import"}]}